{"ast":null,"code":"var _jsxFileName = \"/Users/elvin/Documents/practica/test/src/utilities/context/favoritiesPostsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoriteContext = /*#__PURE__*/createContext(null);\nexport function FavoriteProviderPosts(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [favoritePosts, setFavoritePosts] = useState(JSON.parse(localStorage.getItem(\"favoritePosts\")) || []);\n  const [showFavorites, setShowFavorites] = useState(false);\n  console.log(setFavoritePosts);\n  const handleAddMultiplyToFavoritiesPosts = ids => {\n    const currentFavoritePosts = JSON.parse(localStorage.getItem(\"favoritePosts\")) || [];\n    const newFavorities = [...new Set([...currentFavoritePosts, ...ids])];\n    localStorage.setItem(\"favoritePosts\", JSON.stringify(newFavorities));\n    setFavoritePosts(newFavorities);\n    toast.success(\"posts added to Favorites!\");\n  };\n  const handleToggleAddFavoritePosts = postId => {\n    const hasInList = favoritePosts.includes(postId);\n    if (hasInList) {\n      const newFavoritePosts = favoritePosts.filter(id => id !== postId);\n      setFavoritePosts(newFavoritePosts);\n      localStorage.setItem(\"favoritePosts\", JSON.stringify(newFavoritePosts));\n      toast.success(\" post deleted to Favorites!\");\n    } else {\n      const newFavoritePosts = [...favoritePosts, postId];\n      setFavoritePosts(newFavoritePosts);\n      localStorage.setItem(\"favoritePosts\", JSON.stringify(newFavoritePosts));\n      toast.success(\"post added to Favorites!\");\n    }\n  };\n  const handleRemoveMultiplyToFavoritiesPosts = () => {\n    setFavoritePosts([]);\n    localStorage.setItem(\"favoritePosts\", JSON.stringify([]));\n  };\n  const value = {\n    handleAddMultiplyToFavoritiesPosts,\n    handleToggleAddFavoritePosts,\n    handleRemoveMultiplyToFavoritiesPosts,\n    favoritePosts,\n    setFavoritePosts,\n    showFavorites,\n    setShowFavorites\n  };\n  return /*#__PURE__*/_jsxDEV(FavoriteContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(FavoriteProviderPosts, \"LS0I+bdL0Ldm7HnKdXhS51wa2Os=\");\n_c = FavoriteProviderPosts;\nexport const useFavoritePosts = () => {\n  _s2();\n  return useContext(FavoriteContext);\n};\n_s2(useFavoritePosts, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"FavoriteProviderPosts\");","map":{"version":3,"names":["createContext","useContext","useState","toast","jsxDEV","_jsxDEV","FavoriteContext","FavoriteProviderPosts","_ref","_s","children","favoritePosts","setFavoritePosts","JSON","parse","localStorage","getItem","showFavorites","setShowFavorites","console","log","handleAddMultiplyToFavoritiesPosts","ids","currentFavoritePosts","newFavorities","Set","setItem","stringify","success","handleToggleAddFavoritePosts","postId","hasInList","includes","newFavoritePosts","filter","id","handleRemoveMultiplyToFavoritiesPosts","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useFavoritePosts","_s2","$RefreshReg$"],"sources":["/Users/elvin/Documents/practica/test/src/utilities/context/favoritiesPostsContext.js"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\n\nconst FavoriteContext = createContext(null);\n\nexport function FavoriteProviderPosts({ children }) {\n  const [favoritePosts, setFavoritePosts] = useState(\n    JSON.parse(localStorage.getItem(\"favoritePosts\")) || []\n  );\n  const [showFavorites, setShowFavorites] = useState(false);\n  console.log(setFavoritePosts);\n  const handleAddMultiplyToFavoritiesPosts = (ids) => {\n    const currentFavoritePosts =\n      JSON.parse(localStorage.getItem(\"favoritePosts\")) || [];\n    const newFavorities = [...new Set([...currentFavoritePosts, ...ids])];\n    localStorage.setItem(\"favoritePosts\", JSON.stringify(newFavorities));\n    setFavoritePosts(newFavorities);\n    toast.success(\"posts added to Favorites!\");\n  };\n\n  const handleToggleAddFavoritePosts = (postId) => {\n    const hasInList = favoritePosts.includes(postId);\n    if (hasInList) {\n      const newFavoritePosts = favoritePosts.filter((id) => id !== postId);\n      setFavoritePosts(newFavoritePosts);\n      localStorage.setItem(\"favoritePosts\", JSON.stringify(newFavoritePosts));\n      toast.success(\" post deleted to Favorites!\");\n    } else {\n      const newFavoritePosts = [...favoritePosts, postId];\n      setFavoritePosts(newFavoritePosts);\n      localStorage.setItem(\"favoritePosts\", JSON.stringify(newFavoritePosts));\n      toast.success(\"post added to Favorites!\");\n    }\n  };\n\n  const handleRemoveMultiplyToFavoritiesPosts = () => {\n    setFavoritePosts([]);\n    localStorage.setItem(\"favoritePosts\", JSON.stringify([]));\n  };\n\n  const value = {\n    handleAddMultiplyToFavoritiesPosts,\n    handleToggleAddFavoritePosts,\n    handleRemoveMultiplyToFavoritiesPosts,\n    favoritePosts,\n    setFavoritePosts,\n    showFavorites,\n    setShowFavorites,\n  };\n  return (\n    <FavoriteContext.Provider value={value}>\n      {children}\n    </FavoriteContext.Provider>\n  );\n}\n\nexport const useFavoritePosts = () => useContext(FavoriteContext);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}