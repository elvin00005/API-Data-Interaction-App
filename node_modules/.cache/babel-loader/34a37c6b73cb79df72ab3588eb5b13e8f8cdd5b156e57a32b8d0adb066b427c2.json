{"ast":null,"code":"var _jsxFileName = \"/Users/elvin/Documents/practica/test/src/components/postComponents/PostCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Card, Form } from \"react-bootstrap\";\nimport { ButtonToAddToFavorites, CommentButton, DeleteButton, EditButton } from \"../../utilities/const/Buttons\";\nimport FormForUpdatePost from \"../formForUpdatePost/FormForUpdatePost\";\nimport styles from \"../../pages/Posts.module.scss\";\nimport { useFavorite } from \"../../utilities/context/favoritiesPostsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostCard = _ref => {\n  _s();\n  var _post$user, _post$user2;\n  let {\n    post,\n    setSelectedPosts,\n    setIsVisabilityModalOfDelete,\n    selectedPosts,\n    setSelectedPostId\n  } = _ref;\n  const {\n    favoritePosts,\n    handleToggleAddFavorite\n  } = useFavorite();\n  const [isVisabilityComments, setIsVisabilityComments] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const handleCloseEdit = () => setIsEdit(false);\n  const handleEdit = () => {\n    setIsEdit(true);\n  };\n  const userMainData = {\n    title: post === null || post === void 0 ? void 0 : post.title,\n    body: post === null || post === void 0 ? void 0 : post.body,\n    userName: post === null || post === void 0 ? void 0 : (_post$user = post.user) === null || _post$user === void 0 ? void 0 : _post$user.name\n  };\n  if (isEdit) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column bg-light p-3 m-1 rounded\",\n      children: /*#__PURE__*/_jsxDEV(FormForUpdatePost, {\n        editedPost: userMainData\n        // handleSavePost={handleSavePost}\n        ,\n        handleCancel: handleCloseEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: `text-center m-1 p-2 ${favoritePosts.includes(post.id) ? \"bg-warning\" : \"bg-light\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n        className: styles.check,\n        checked: selectedPosts.includes(post.id),\n        onChange: e => {\n          if (e.target.checked) {\n            setSelectedPosts([...selectedPosts, post.id]);\n          } else {\n            setSelectedPosts(selectedPosts.filter(postId => postId !== post.id));\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post === null || post === void 0 ? void 0 : post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: post === null || post === void 0 ? void 0 : (_post$user2 = post.user) === null || _post$user2 === void 0 ? void 0 : _post$user2.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post === null || post === void 0 ? void 0 : post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center gap-5\",\n      children: [/*#__PURE__*/_jsxDEV(EditButton, {\n        onClick: handleEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonToAddToFavorites, {\n        onClick: () => handleToggleAddFavorite(post.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n        onClick: () => {\n          setSelectedPostId(post.id);\n          setIsVisabilityModalOfDelete(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentButton, {\n        onClick: () => {\n          setIsVisabilityComments(prev => !prev);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), isVisabilityComments && (post === null || post === void 0 ? void 0 : post.comments.map(comment => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-1 p-2 bg-info rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: comment.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this);\n    }))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(PostCard, \"SWaNKN+3H4m3GAIEu8PNd03VaLU=\", false, function () {\n  return [useFavorite];\n});\n_c = PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","useState","Card","Form","ButtonToAddToFavorites","CommentButton","DeleteButton","EditButton","FormForUpdatePost","styles","useFavorite","jsxDEV","_jsxDEV","PostCard","_ref","_s","_post$user","_post$user2","post","setSelectedPosts","setIsVisabilityModalOfDelete","selectedPosts","setSelectedPostId","favoritePosts","handleToggleAddFavorite","isVisabilityComments","setIsVisabilityComments","isEdit","setIsEdit","handleCloseEdit","handleEdit","userMainData","title","body","userName","user","name","className","children","editedPost","handleCancel","fileName","_jsxFileName","lineNumber","columnNumber","id","includes","Check","check","checked","onChange","e","target","filter","postId","onClick","prev","comments","map","comment","email","_c","$RefreshReg$"],"sources":["/Users/elvin/Documents/practica/test/src/components/postComponents/PostCard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Card, Form } from \"react-bootstrap\";\nimport {\n  ButtonToAddToFavorites,\n  CommentButton,\n  DeleteButton,\n  EditButton,\n} from \"../../utilities/const/Buttons\";\nimport FormForUpdatePost from \"../formForUpdatePost/FormForUpdatePost\";\n\nimport styles from \"../../pages/Posts.module.scss\";\nimport { useFavorite } from \"../../utilities/context/favoritiesPostsContext\";\n\nexport const PostCard = ({\n  post,\n  setSelectedPosts,\n  setIsVisabilityModalOfDelete,\n  selectedPosts,\n  setSelectedPostId,\n}) => {\n  const { favoritePosts, handleToggleAddFavorite } = useFavorite();\n\n  const [isVisabilityComments, setIsVisabilityComments] = useState(false);\n\n  const [isEdit, setIsEdit] = useState(false);\n  const handleCloseEdit = () => setIsEdit(false);\n\n  const handleEdit = () => {\n    setIsEdit(true);\n  };\n  const userMainData = {\n    title: post?.title,\n    body: post?.body,\n    userName: post?.user?.name,\n  };\n  if (isEdit) {\n    return (\n      <div\n        key={post.id}\n        className=\"d-flex flex-column bg-light p-3 m-1 rounded\"\n      >\n        <FormForUpdatePost\n          editedPost={userMainData}\n          // handleSavePost={handleSavePost}\n          handleCancel={handleCloseEdit}\n        />\n      </div>\n    );\n  }\n  return (\n    <Card\n      className={`text-center m-1 p-2 ${\n        favoritePosts.includes(post.id) ? \"bg-warning\" : \"bg-light\"\n      }`}\n    >\n      <div>\n        <Form.Check\n          className={styles.check}\n          checked={selectedPosts.includes(post.id)}\n          onChange={(e) => {\n            if (e.target.checked) {\n              setSelectedPosts([...selectedPosts, post.id]);\n            } else {\n              setSelectedPosts(\n                selectedPosts.filter((postId) => postId !== post.id)\n              );\n            }\n          }}\n        />\n\n        <h3>{post?.title}</h3>\n        <h5>{post?.user?.name}</h5>\n        <p>{post?.body}</p>\n      </div>\n\n      <div className=\"d-flex justify-content-center gap-5\">\n        <EditButton onClick={handleEdit} />\n        <ButtonToAddToFavorites\n          onClick={() => handleToggleAddFavorite(post.id)}\n        />\n        <DeleteButton\n          onClick={() => {\n            setSelectedPostId(post.id);\n            setIsVisabilityModalOfDelete(true);\n          }}\n        />\n        <CommentButton\n          onClick={() => {\n            setIsVisabilityComments((prev) => !prev);\n          }}\n        />\n      </div>\n      {isVisabilityComments &&\n        post?.comments.map((comment) => {\n          return (\n            <div\n              key={comment.id}\n              className=\"m-1 p-2 bg-info\n            rounded\"\n            >\n              <h4>{comment.email}</h4>\n              <h5>{comment.name}</h5>\n              <p>{comment.body}</p>\n            </div>\n          );\n        })}\n    </Card>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}