{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport function usePagination(_ref) {\n  _s();\n  let {\n    filteredPosts\n  } = _ref;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(localStorage.getItem(\"quantityPosts\") || \"10\");\n  const [currentPosts, setCurrentPosts] = useState([]);\n  useEffect(() => {\n    if (postsPerPage === \"all\") {\n      setCurrentPosts(filteredPosts);\n    } else {\n      const lastIndexPost = currentPage * parseInt(postsPerPage);\n      const firstIndexPost = lastIndexPost - parseInt(postsPerPage);\n      setCurrentPosts(filteredPosts.slice(firstIndexPost, lastIndexPost));\n    }\n  }, [currentPage, postsPerPage, filteredPosts]);\n  const paginate = number => setCurrentPage(number);\n  const changePage = value => {\n    setPostsPerPage(value);\n    localStorage.setItem(\"quantityPosts\", value);\n  };\n  return {\n    postsPerPage,\n    setCurrentPage,\n    currentPage,\n    paginate,\n    changePage,\n    currentPosts\n  };\n}\n_s(usePagination, \"gguwsppBrygnu0iPw9gh5R/VkCI=\");","map":{"version":3,"names":["useEffect","useState","usePagination","_ref","_s","filteredPosts","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","localStorage","getItem","currentPosts","setCurrentPosts","lastIndexPost","parseInt","firstIndexPost","slice","paginate","number","changePage","value","setItem"],"sources":["/Users/elvin/Documents/practica/test/src/utilities/hooks/usePagination.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport function usePagination({ filteredPosts }) {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(\n    localStorage.getItem(\"quantityPosts\") || \"10\"\n  );\n  const [currentPosts, setCurrentPosts] = useState([]);\n\n  useEffect(() => {\n    if (postsPerPage === \"all\") {\n      setCurrentPosts(filteredPosts);\n    } else {\n      const lastIndexPost = currentPage * parseInt(postsPerPage);\n      const firstIndexPost = lastIndexPost - parseInt(postsPerPage);\n\n      setCurrentPosts(filteredPosts.slice(firstIndexPost, lastIndexPost));\n    }\n  }, [currentPage, postsPerPage, filteredPosts]);\n\n  const paginate = (number) => setCurrentPage(number);\n  const changePage = (value) => {\n    setPostsPerPage(value);\n    localStorage.setItem(\"quantityPosts\", value);\n  };\n\n  return {\n    postsPerPage,\n    setCurrentPage,\n    currentPage,\n    paginate,\n    changePage,\n    currentPosts,\n  };\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,SAASC,aAAaA,CAAAC,IAAA,EAAoB;EAAAC,EAAA;EAAA,IAAnB;IAAEC;EAAc,CAAC,GAAAF,IAAA;EAC7C,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAC9CS,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,IAAI,IAC3C,CAAC;EACD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,IAAIQ,YAAY,KAAK,KAAK,EAAE;MAC1BK,eAAe,CAACR,aAAa,CAAC;IAChC,CAAC,MAAM;MACL,MAAMS,aAAa,GAAGR,WAAW,GAAGS,QAAQ,CAACP,YAAY,CAAC;MAC1D,MAAMQ,cAAc,GAAGF,aAAa,GAAGC,QAAQ,CAACP,YAAY,CAAC;MAE7DK,eAAe,CAACR,aAAa,CAACY,KAAK,CAACD,cAAc,EAAEF,aAAa,CAAC,CAAC;IACrE;EACF,CAAC,EAAE,CAACR,WAAW,EAAEE,YAAY,EAAEH,aAAa,CAAC,CAAC;EAE9C,MAAMa,QAAQ,GAAIC,MAAM,IAAKZ,cAAc,CAACY,MAAM,CAAC;EACnD,MAAMC,UAAU,GAAIC,KAAK,IAAK;IAC5BZ,eAAe,CAACY,KAAK,CAAC;IACtBX,YAAY,CAACY,OAAO,CAAC,eAAe,EAAED,KAAK,CAAC;EAC9C,CAAC;EAED,OAAO;IACLb,YAAY;IACZD,cAAc;IACdD,WAAW;IACXY,QAAQ;IACRE,UAAU;IACVR;EACF,CAAC;AACH;AAACR,EAAA,CAhCeF,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}