{"ast":null,"code":"var _jsxFileName = \"/Users/elvin/Documents/practica/test/src/components/albumsComponents/AlbumsCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ButtonToAddToFavorites, DeleteButton, EditButton } from \"../../utilities/const/Buttons\";\nimport { Card, Form } from \"react-bootstrap\";\nimport { FormForUpdateAlbum } from \"../formForUpdateAlbum/FormForUpdateAlbums\";\nimport styles from \"./PostsList.module.scss\";\nimport { useFavoriteAlbums } from \"../../utilities/context/favoritiesAlbumsContext\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AlbumsCard = _ref => {\n  _s();\n  var _album$user, _album$user2;\n  let {\n    album,\n    selectedAlbums,\n    setSelectedAlbums,\n    setSelectedAlbumsId,\n    setShowModalOfDelete\n  } = _ref;\n  const {\n    albumId\n  } = useParams();\n  const {\n    favoriteAlbums,\n    handleToggleAddFavoriteAlbums\n  } = useFavoriteAlbums();\n  const [isEdit, setIsEdit] = useState(false);\n  const handleCloseEdit = () => setIsEdit(false);\n  const handleEdit = () => {\n    setIsEdit(true);\n  };\n  const userMainData = {\n    title: album === null || album === void 0 ? void 0 : album.title,\n    userName: album === null || album === void 0 ? void 0 : (_album$user = album.user) === null || _album$user === void 0 ? void 0 : _album$user.name\n  };\n  if (isEdit) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column bg-light p-3 m-1 rounded\",\n      children: /*#__PURE__*/_jsxDEV(FormForUpdateAlbum, {\n        id: album === null || album === void 0 ? void 0 : album.id,\n        editedalbum: userMainData,\n        handleCloseEdit: handleCloseEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, album.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: `text-center m-1 p-2 ${favoriteAlbums.includes(album.id) ? \"bg-warning\" : \"bg-light\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n        className: styles.check,\n        checked: selectedAlbums.includes(album.id),\n        onChange: e => {\n          if (e.target.checked) {\n            setSelectedAlbums([...selectedAlbums, album.id]);\n          } else {\n            setSelectedAlbums(selectedAlbums.filter(albumId => albumId !== album.id));\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/photo/${album.id}`,\n          children: album === null || album === void 0 ? void 0 : album.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: album === null || album === void 0 ? void 0 : (_album$user2 = album.user) === null || _album$user2 === void 0 ? void 0 : _album$user2.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center gap-5\",\n      children: [/*#__PURE__*/_jsxDEV(EditButton, {\n        onClick: handleEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonToAddToFavorites, {\n        onClick: () => handleToggleAddFavoriteAlbums(album.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n        onClick: () => {\n          setSelectedAlbumsId(album.id);\n          setShowModalOfDelete(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(AlbumsCard, \"DlNTDSUj2HL5wY/aGRVC/W/Whvw=\", false, function () {\n  return [useParams, useFavoriteAlbums];\n});\n_c = AlbumsCard;\nvar _c;\n$RefreshReg$(_c, \"AlbumsCard\");","map":{"version":3,"names":["React","useState","ButtonToAddToFavorites","DeleteButton","EditButton","Card","Form","FormForUpdateAlbum","styles","useFavoriteAlbums","Link","useParams","jsxDEV","_jsxDEV","AlbumsCard","_ref","_s","_album$user","_album$user2","album","selectedAlbums","setSelectedAlbums","setSelectedAlbumsId","setShowModalOfDelete","albumId","favoriteAlbums","handleToggleAddFavoriteAlbums","isEdit","setIsEdit","handleCloseEdit","handleEdit","userMainData","title","userName","user","name","className","children","id","editedalbum","fileName","_jsxFileName","lineNumber","columnNumber","includes","Check","check","checked","onChange","e","target","filter","to","onClick","_c","$RefreshReg$"],"sources":["/Users/elvin/Documents/practica/test/src/components/albumsComponents/AlbumsCard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  ButtonToAddToFavorites,\n  DeleteButton,\n  EditButton,\n} from \"../../utilities/const/Buttons\";\nimport { Card, Form } from \"react-bootstrap\";\nimport { FormForUpdateAlbum } from \"../formForUpdateAlbum/FormForUpdateAlbums\";\n\nimport styles from \"./PostsList.module.scss\";\nimport { useFavoriteAlbums } from \"../../utilities/context/favoritiesAlbumsContext\";\nimport { Link, useParams } from \"react-router-dom\";\n\nexport const AlbumsCard = ({\n  album,\n  selectedAlbums,\n  setSelectedAlbums,\n  setSelectedAlbumsId,\n  setShowModalOfDelete,\n}) => {\n  const { albumId } = useParams();\n\n  const { favoriteAlbums, handleToggleAddFavoriteAlbums } = useFavoriteAlbums();\n\n  const [isEdit, setIsEdit] = useState(false);\n  const handleCloseEdit = () => setIsEdit(false);\n\n  const handleEdit = () => {\n    setIsEdit(true);\n  };\n  const userMainData = {\n    title: album?.title,\n    userName: album?.user?.name,\n  };\n  if (isEdit) {\n    return (\n      <div\n        key={album.id}\n        className=\"d-flex flex-column bg-light p-3 m-1 rounded\"\n      >\n        <FormForUpdateAlbum\n          id={album?.id}\n          editedalbum={userMainData}\n          handleCloseEdit={handleCloseEdit}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Card\n      className={`text-center m-1 p-2 ${\n        favoriteAlbums.includes(album.id) ? \"bg-warning\" : \"bg-light\"\n      }`}\n    >\n      <div>\n        <Form.Check\n          className={styles.check}\n          checked={selectedAlbums.includes(album.id)}\n          onChange={(e) => {\n            if (e.target.checked) {\n              setSelectedAlbums([...selectedAlbums, album.id]);\n            } else {\n              setSelectedAlbums(\n                selectedAlbums.filter((albumId) => albumId !== album.id)\n              );\n            }\n          }}\n        />\n        <h3>\n          <Link to={`/photo/${album.id}`}>{album?.title}</Link>\n        </h3>\n        <h5>{album?.user?.name}</h5>\n      </div>\n      <div className=\"d-flex justify-content-center gap-5\">\n        <EditButton onClick={handleEdit} />\n        <ButtonToAddToFavorites\n          onClick={() => handleToggleAddFavoriteAlbums(album.id)}\n        />\n        <DeleteButton\n          onClick={() => {\n            setSelectedAlbumsId(album.id);\n            setShowModalOfDelete(true);\n          }}\n        />\n      </div>\n    </Card>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,sBAAsB,EACtBC,YAAY,EACZC,UAAU,QACL,+BAA+B;AACtC,SAASC,IAAI,EAAEC,IAAI,QAAQ,iBAAiB;AAC5C,SAASC,kBAAkB,QAAQ,2CAA2C;AAE9E,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,iBAAiB,QAAQ,iDAAiD;AACnF,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,OAAO,MAAMC,UAAU,GAAGC,IAAA,IAMpB;EAAAC,EAAA;EAAA,IAAAC,WAAA,EAAAC,YAAA;EAAA,IANqB;IACzBC,KAAK;IACLC,cAAc;IACdC,iBAAiB;IACjBC,mBAAmB;IACnBC;EACF,CAAC,GAAAR,IAAA;EACC,MAAM;IAAES;EAAQ,CAAC,GAAGb,SAAS,CAAC,CAAC;EAE/B,MAAM;IAAEc,cAAc;IAAEC;EAA8B,CAAC,GAAGjB,iBAAiB,CAAC,CAAC;EAE7E,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM4B,eAAe,GAAGA,CAAA,KAAMD,SAAS,CAAC,KAAK,CAAC;EAE9C,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvBF,SAAS,CAAC,IAAI,CAAC;EACjB,CAAC;EACD,MAAMG,YAAY,GAAG;IACnBC,KAAK,EAAEb,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEa,KAAK;IACnBC,QAAQ,EAAEd,KAAK,aAALA,KAAK,wBAAAF,WAAA,GAALE,KAAK,CAAEe,IAAI,cAAAjB,WAAA,uBAAXA,WAAA,CAAakB;EACzB,CAAC;EACD,IAAIR,MAAM,EAAE;IACV,oBACEd,OAAA;MAEEuB,SAAS,EAAC,6CAA6C;MAAAC,QAAA,eAEvDxB,OAAA,CAACN,kBAAkB;QACjB+B,EAAE,EAAEnB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmB,EAAG;QACdC,WAAW,EAAER,YAAa;QAC1BF,eAAe,EAAEA;MAAgB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC;IAAC,GAPGxB,KAAK,CAACmB,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQV,CAAC;EAEV;EAEA,oBACE9B,OAAA,CAACR,IAAI;IACH+B,SAAS,EAAG,uBACVX,cAAc,CAACmB,QAAQ,CAACzB,KAAK,CAACmB,EAAE,CAAC,GAAG,YAAY,GAAG,UACpD,EAAE;IAAAD,QAAA,gBAEHxB,OAAA;MAAAwB,QAAA,gBACExB,OAAA,CAACP,IAAI,CAACuC,KAAK;QACTT,SAAS,EAAE5B,MAAM,CAACsC,KAAM;QACxBC,OAAO,EAAE3B,cAAc,CAACwB,QAAQ,CAACzB,KAAK,CAACmB,EAAE,CAAE;QAC3CU,QAAQ,EAAGC,CAAC,IAAK;UACf,IAAIA,CAAC,CAACC,MAAM,CAACH,OAAO,EAAE;YACpB1B,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAED,KAAK,CAACmB,EAAE,CAAC,CAAC;UAClD,CAAC,MAAM;YACLjB,iBAAiB,CACfD,cAAc,CAAC+B,MAAM,CAAE3B,OAAO,IAAKA,OAAO,KAAKL,KAAK,CAACmB,EAAE,CACzD,CAAC;UACH;QACF;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACF9B,OAAA;QAAAwB,QAAA,eACExB,OAAA,CAACH,IAAI;UAAC0C,EAAE,EAAG,UAASjC,KAAK,CAACmB,EAAG,EAAE;UAAAD,QAAA,EAAElB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEa;QAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACL9B,OAAA;QAAAwB,QAAA,EAAKlB,KAAK,aAALA,KAAK,wBAAAD,YAAA,GAALC,KAAK,CAAEe,IAAI,cAAAhB,YAAA,uBAAXA,YAAA,CAAaiB;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACN9B,OAAA;MAAKuB,SAAS,EAAC,qCAAqC;MAAAC,QAAA,gBAClDxB,OAAA,CAACT,UAAU;QAACiD,OAAO,EAAEvB;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnC9B,OAAA,CAACX,sBAAsB;QACrBmD,OAAO,EAAEA,CAAA,KAAM3B,6BAA6B,CAACP,KAAK,CAACmB,EAAE;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC,eACF9B,OAAA,CAACV,YAAY;QACXkD,OAAO,EAAEA,CAAA,KAAM;UACb/B,mBAAmB,CAACH,KAAK,CAACmB,EAAE,CAAC;UAC7Bf,oBAAoB,CAAC,IAAI,CAAC;QAC5B;MAAE;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAAC3B,EAAA,CA3EWF,UAAU;EAAA,QAODH,SAAS,EAE6BF,iBAAiB;AAAA;AAAA6C,EAAA,GAThExC,UAAU;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}