{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useFavoriteTodos } from \"../context/favoritiesTodosContext\";\nimport { useTodos } from \"../context/todosContext\";\nexport function useFilterTodos() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const {\n    favoriteTodos,\n    showFavorites,\n    setShowFavorites\n  } = useFavoriteTodos();\n  const {\n    todos\n  } = useTodos();\n  const uniqueUsers = useMemo(() => {\n    const userIds = new Set(todos.map(todo => todo.userId));\n    return todos.filter(todo => userIds.has(todo.userId)).map(todo => todo.user);\n  }, [todos]);\n  const userOptions = useMemo(() => uniqueUsers.map(user => ({\n    label: user.name,\n    value: user.id\n  })), [uniqueUsers]);\n  const [sortedTodos, setSortedTodos] = useState([]);\n  useEffect(() => {\n    const sorted = todos.slice().sort((a, b) => {\n      if (a.completed && !b.completed) {\n        return 1; // перемещаем выполненную задачу вниз\n      } else if (!a.completed && b.completed) {\n        return -1; // перемещаем невыполненную задачу вверх\n      } else {\n        return 0; // сохраняем текущий порядок для задач с одинаковым статусом\n      }\n    });\n\n    setSortedTodos(sorted);\n  }, [todos]);\n  const filteredTodos = useMemo(() => sortedTodos.filter(todo => {\n    const titleMatch = todo.title.toLowerCase().includes(searchTerm.toLowerCase());\n    const userMatch = selectedUsers.length === 0 || selectedUsers.find(user => user.value === todo.userId);\n    const favoriteMatch = showFavorites ? favoriteTodos.includes(todo.id) : true;\n    return titleMatch && userMatch && favoriteMatch;\n  }), [sortedTodos, searchTerm, selectedUsers, favoriteTodos, showFavorites]);\n  return {\n    userOptions,\n    searchTerm,\n    selectedUsers,\n    setSearchTerm,\n    setSelectedUsers,\n    setShowFavorites,\n    filteredTodos\n  };\n}\n_s(useFilterTodos, \"LO4/X/6NI+cpCFgCq0dHbb5yoLQ=\", false, function () {\n  return [useFavoriteTodos, useTodos];\n});","map":{"version":3,"names":["useEffect","useMemo","useState","useFavoriteTodos","useTodos","useFilterTodos","_s","searchTerm","setSearchTerm","selectedUsers","setSelectedUsers","favoriteTodos","showFavorites","setShowFavorites","todos","uniqueUsers","userIds","Set","map","todo","userId","filter","has","user","userOptions","label","name","value","id","sortedTodos","setSortedTodos","sorted","slice","sort","a","b","completed","filteredTodos","titleMatch","title","toLowerCase","includes","userMatch","length","find","favoriteMatch"],"sources":["/Users/elvin/Documents/practica/test/src/utilities/hooks/useFilterTodos.js"],"sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\nimport { useFavoriteTodos } from \"../context/favoritiesTodosContext\";\nimport { useTodos } from \"../context/todosContext\";\n\nexport function useFilterTodos() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const { favoriteTodos, showFavorites, setShowFavorites } = useFavoriteTodos();\n  const { todos } = useTodos();\n\n  const uniqueUsers = useMemo(() => {\n    const userIds = new Set(todos.map((todo) => todo.userId));\n    return todos\n      .filter((todo) => userIds.has(todo.userId))\n      .map((todo) => todo.user);\n  }, [todos]);\n\n  const userOptions = useMemo(\n    () =>\n      uniqueUsers.map((user) => ({\n        label: user.name,\n        value: user.id,\n      })),\n    [uniqueUsers]\n  );\n\n  const [sortedTodos, setSortedTodos] = useState([]);\n\n  useEffect(() => {\n    const sorted = todos.slice().sort((a, b) => {\n      if (a.completed && !b.completed) {\n        return 1; // перемещаем выполненную задачу вниз\n      } else if (!a.completed && b.completed) {\n        return -1; // перемещаем невыполненную задачу вверх\n      } else {\n        return 0; // сохраняем текущий порядок для задач с одинаковым статусом\n      }\n    });\n    setSortedTodos(sorted);\n  }, [todos]);\n\n  const filteredTodos = useMemo(\n    () =>\n      sortedTodos.filter((todo) => {\n        const titleMatch = todo.title\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase());\n        const userMatch =\n          selectedUsers.length === 0 ||\n          selectedUsers.find((user) => user.value === todo.userId);\n        const favoriteMatch = showFavorites\n          ? favoriteTodos.includes(todo.id)\n          : true;\n        return titleMatch && userMatch && favoriteMatch;\n      }),\n    [sortedTodos, searchTerm, selectedUsers, favoriteTodos, showFavorites]\n  );\n\n  return {\n    userOptions,\n    searchTerm,\n    selectedUsers,\n    setSearchTerm,\n    setSelectedUsers,\n    setShowFavorites,\n    filteredTodos,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}