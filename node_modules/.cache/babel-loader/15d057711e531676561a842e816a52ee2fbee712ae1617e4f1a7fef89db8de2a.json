{"ast":null,"code":"var _jsxFileName = \"/Users/elvin/Documents/practica/test/src/pages/Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport axios from \"axios\";\nimport { toast } from \"react-hot-toast\";\nimport { Button } from \"react-bootstrap\";\nimport Pagination from \"../components/pagination/Pagination\";\nimport usePagination from \"../utilities/hooks/usePagination\";\nimport ModalForDelete from \"../components/modalsWindow/modalWindowForDelete/ModalWindowByDelete\";\nimport FormForUpdatePost from \"../components/formForUpdatePost/FormForUpdatePost\";\nimport ModalWindowAddToFavorites from \"../components/modalsWindow/addToFavoritesWindow/ModalWindowAddToFavorites\";\nimport ModalWindowByDeleteAllCheckedPosts from \"../components/modalsWindow/modalWindowForDelete/ModalWindowByDeleteAllCheckedPosts\";\nimport CheckBox from \"../components/postComponents/CheckBox\";\nimport MyCard from \"../components/postComponents/MyCard\";\nimport useDownloadPosts from \"../utilities/hooks/useDownloadPosts\";\nimport useDownloadUsers from \"../utilities/hooks/useDownloadUsers\";\nimport useDownloadComments from \"../utilities/hooks/useDownloadComments\";\nimport styles from \"./Posts.module.scss\";\nimport { useDeletePost } from \"../utilities/hooks/useDeletePosts\";\nimport { useDeletePostsFromFavorites } from \"../utilities/hooks/useDeletePostsFromFavorites\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const {\n    posts,\n    setPosts\n  } = useDownloadPosts();\n  const {\n    users\n  } = useDownloadUsers();\n  const {\n    comments\n  } = useDownloadComments();\n  const [isVisabilityModal, setIsVisabilityModal] = useState(false);\n  const [isVisabilityModalOfFavorities, setIsVisabilityModalOfFavorities] = useState(false);\n  const [isVisabilityModalOfDeleteCheckedPosts, setIsVisabilityModalOfDeleteCheckedPosts] = useState(false);\n  const [selectedPostId, setSelectedPostId] = useState(null);\n  const [selectedComments, setSelectedComments] = useState([]);\n  const [selectedPostForComments, setSelectedPostForComments] = useState(null);\n  const [editingPost, setEditingPost] = useState(null);\n  const [editedPost, setEditedPost] = useState({\n    title: \"\",\n    body: \"\",\n    userName: \"\"\n  });\n  const [favoritePosts, setFavoritePosts] = useState([]);\n  const [selectedPosts, setSelectedPosts] = useState([]);\n  const {\n    deletePost\n  } = useDeletePost(setPosts);\n  const {\n    deletePostsFromFavorites\n  } = useDeletePostsFromFavorites(setPosts, setFavoritePosts, setSelectedPosts);\n  const {\n    postsPerPage,\n    changePage,\n    setCurrentPage,\n    currentPage,\n    paginate,\n    currentPosts\n  } = usePagination({\n    users,\n    posts\n  });\n  const handleEdit = post => {\n    setEditingPost(post.id);\n    setEditedPost({\n      title: post.title,\n      body: post.body,\n      userName: post.userName\n    });\n  };\n  const handleSave = async () => {\n    try {\n      const response = await axios.put(`https://jsonplaceholder.typicode.com/posts/${editingPost}`, editedPost);\n      if (response.status === 200) {\n        const updatedPosts = posts.map(post => post.id === editingPost ? response.data : post);\n        setPosts(updatedPosts);\n        toast.success(\"post updated\");\n      } else {\n        toast.error(\"post update error\");\n      }\n    } catch (error) {\n      toast.error(\"post update error\");\n    }\n    setEditingPost(null);\n    setEditedPost({\n      title: \"\",\n      body: \"\",\n      userName: \"\"\n    });\n  };\n  const handleCancel = () => {\n    setEditingPost(null);\n    setEditedPost({\n      title: \"\",\n      body: \"\",\n      userName: \"\"\n    });\n  };\n  useEffect(() => {\n    const savedFavorites = localStorage.getItem(\"favoritePosts\");\n    if (savedFavorites) {\n      setFavoritePosts(JSON.parse(savedFavorites));\n    } else {\n      setFavoritePosts([]);\n    }\n  }, [selectedPosts]);\n  const handleDelete = async id => {\n    deletePost(id);\n  };\n  const handleButtonClick = postId => {\n    setSelectedPostId(postId);\n  };\n  const handleComment = postId => {\n    if (selectedPostForComments === postId) {\n      setSelectedPostForComments(null);\n      setSelectedComments([]);\n    } else {\n      const commentsForPost = comments.filter(comment => comment.postId === postId);\n      setSelectedComments(commentsForPost);\n      setSelectedPostForComments(postId);\n    }\n  };\n  const handleAddToFavorities = () => {\n    const currentFavoritePosts = JSON.parse(localStorage.getItem(\"favoritePosts\")) || [];\n    const newFavoritePosts = [...new Set([...currentFavoritePosts, ...selectedPosts])];\n    localStorage.setItem(\"favoritePosts\", JSON.stringify(newFavoritePosts));\n    setFavoritePosts(newFavoritePosts);\n    toast.success(\"posts added to favorites!\");\n  };\n  const handleFavorite = postId => {\n    if (favoritePosts.includes(postId)) {\n      const newFavoritePosts = favoritePosts.filter(id => id !== postId);\n      setFavoritePosts(newFavoritePosts);\n      localStorage.setItem(\"favoritePosts\", JSON.stringify(newFavoritePosts));\n      toast.error(\" post deleted to favorites!\");\n    } else {\n      const newFavoritePosts = [...favoritePosts, postId];\n      setFavoritePosts(newFavoritePosts);\n      localStorage.setItem(\"favoritePosts\", JSON.stringify(newFavoritePosts));\n      toast.success(\"post added to favorites!\");\n    }\n  };\n  const handleDeleteFromFavorities = () => {\n    deletePostsFromFavorites(selectedPosts, favoritePosts);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(ModalForDelete, {\n      id: selectedPostId,\n      isVisabilityModal: isVisabilityModal,\n      handleDelete: handleDelete,\n      setIsVisabilityModal: setIsVisabilityModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalWindowAddToFavorites, {\n      handleAddToFavorities: handleAddToFavorities,\n      isVisabilityModalOfFavorities: isVisabilityModalOfFavorities,\n      setIsVisabilityModalOfFavorities: setIsVisabilityModalOfFavorities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalWindowByDeleteAllCheckedPosts, {\n      setIsVisabilityModalOfDeleteCheckedPosts: setIsVisabilityModalOfDeleteCheckedPosts,\n      isVisabilityModalOfDeleteCheckedPosts: isVisabilityModalOfDeleteCheckedPosts,\n      handleDeleteFromFavorities: handleDeleteFromFavorities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CheckBox, {\n      postsPerPage: postsPerPage,\n      changePage: changePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: currentPosts.map(post => {\n        if (editingPost === post.id) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column bg-light p-3 m-1 rounded\",\n            children: /*#__PURE__*/_jsxDEV(FormForUpdatePost, {\n              editedPost: editedPost,\n              setEditedPost: setEditedPost,\n              handleSave: handleSave,\n              handleCancel: handleCancel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(MyCard, {\n          post: post,\n          favoritePosts: favoritePosts,\n          selectedComments: selectedComments,\n          selectedPostForComments: selectedPostForComments,\n          selectedPosts: selectedPosts,\n          handleButtonClick: handleButtonClick,\n          handleEdit: handleEdit,\n          setSelectedPosts: setSelectedPosts,\n          handleFavorite: handleFavorite,\n          handleComment: handleComment,\n          setIsVisabilityModal: setIsVisabilityModal\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), selectedPosts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center gap-5\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsVisabilityModalOfDeleteCheckedPosts(true),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsVisabilityModalOfFavorities(true),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      somethingPerPage: postsPerPage,\n      totalSomething: posts.length,\n      setCurrentPage: setCurrentPage,\n      currentPage: currentPage,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"6kdzgxLnXMpM8RcfvFGqzUA0tCQ=\", false, function () {\n  return [useDownloadPosts, useDownloadUsers, useDownloadComments, useDeletePost, useDeletePostsFromFavorites, usePagination];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","Layout","axios","toast","Button","Pagination","usePagination","ModalForDelete","FormForUpdatePost","ModalWindowAddToFavorites","ModalWindowByDeleteAllCheckedPosts","CheckBox","MyCard","useDownloadPosts","useDownloadUsers","useDownloadComments","styles","useDeletePost","useDeletePostsFromFavorites","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","users","comments","isVisabilityModal","setIsVisabilityModal","isVisabilityModalOfFavorities","setIsVisabilityModalOfFavorities","isVisabilityModalOfDeleteCheckedPosts","setIsVisabilityModalOfDeleteCheckedPosts","selectedPostId","setSelectedPostId","selectedComments","setSelectedComments","selectedPostForComments","setSelectedPostForComments","editingPost","setEditingPost","editedPost","setEditedPost","title","body","userName","favoritePosts","setFavoritePosts","selectedPosts","setSelectedPosts","deletePost","deletePostsFromFavorites","postsPerPage","changePage","setCurrentPage","currentPage","paginate","currentPosts","handleEdit","post","id","handleSave","response","put","status","updatedPosts","map","data","success","error","handleCancel","savedFavorites","localStorage","getItem","JSON","parse","handleDelete","handleButtonClick","postId","handleComment","commentsForPost","filter","comment","handleAddToFavorities","currentFavoritePosts","newFavoritePosts","Set","setItem","stringify","handleFavorite","includes","handleDeleteFromFavorities","children","fileName","_jsxFileName","lineNumber","columnNumber","className","container","length","onClick","somethingPerPage","totalSomething","_c","$RefreshReg$"],"sources":["/Users/elvin/Documents/practica/test/src/pages/Posts.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport axios from \"axios\";\nimport { toast } from \"react-hot-toast\";\nimport { Button } from \"react-bootstrap\";\n\nimport Pagination from \"../components/pagination/Pagination\";\nimport usePagination from \"../utilities/hooks/usePagination\";\nimport ModalForDelete from \"../components/modalsWindow/modalWindowForDelete/ModalWindowByDelete\";\nimport FormForUpdatePost from \"../components/formForUpdatePost/FormForUpdatePost\";\nimport ModalWindowAddToFavorites from \"../components/modalsWindow/addToFavoritesWindow/ModalWindowAddToFavorites\";\nimport ModalWindowByDeleteAllCheckedPosts from \"../components/modalsWindow/modalWindowForDelete/ModalWindowByDeleteAllCheckedPosts\";\nimport CheckBox from \"../components/postComponents/CheckBox\";\nimport MyCard from \"../components/postComponents/MyCard\";\nimport useDownloadPosts from \"../utilities/hooks/useDownloadPosts\";\nimport useDownloadUsers from \"../utilities/hooks/useDownloadUsers\";\nimport useDownloadComments from \"../utilities/hooks/useDownloadComments\";\n\nimport styles from \"./Posts.module.scss\";\nimport { useDeletePost } from \"../utilities/hooks/useDeletePosts\";\nimport { useDeletePostsFromFavorites } from \"../utilities/hooks/useDeletePostsFromFavorites\";\n\nconst Posts = () => {\n  const { posts, setPosts } = useDownloadPosts();\n  const { users } = useDownloadUsers();\n  const { comments } = useDownloadComments();\n  const [isVisabilityModal, setIsVisabilityModal] = useState(false);\n  const [isVisabilityModalOfFavorities, setIsVisabilityModalOfFavorities] =\n    useState(false);\n  const [\n    isVisabilityModalOfDeleteCheckedPosts,\n    setIsVisabilityModalOfDeleteCheckedPosts,\n  ] = useState(false);\n  const [selectedPostId, setSelectedPostId] = useState(null);\n  const [selectedComments, setSelectedComments] = useState([]);\n  const [selectedPostForComments, setSelectedPostForComments] = useState(null);\n  const [editingPost, setEditingPost] = useState(null);\n  const [editedPost, setEditedPost] = useState({\n    title: \"\",\n    body: \"\",\n    userName: \"\",\n  });\n  const [favoritePosts, setFavoritePosts] = useState([]);\n  const [selectedPosts, setSelectedPosts] = useState([]);\n  const { deletePost } = useDeletePost(setPosts);\n  const { deletePostsFromFavorites } = useDeletePostsFromFavorites(\n    setPosts,\n    setFavoritePosts,\n    setSelectedPosts\n  );\n\n  const {\n    postsPerPage,\n    changePage,\n    setCurrentPage,\n    currentPage,\n    paginate,\n    currentPosts,\n  } = usePagination({ users, posts });\n\n  const handleEdit = (post) => {\n    setEditingPost(post.id);\n    setEditedPost({\n      title: post.title,\n      body: post.body,\n      userName: post.userName,\n    });\n  };\n\n  const handleSave = async () => {\n    try {\n      const response = await axios.put(\n        `https://jsonplaceholder.typicode.com/posts/${editingPost}`,\n        editedPost\n      );\n\n      if (response.status === 200) {\n        const updatedPosts = posts.map((post) =>\n          post.id === editingPost ? response.data : post\n        );\n        setPosts(updatedPosts);\n        toast.success(\"post updated\");\n      } else {\n        toast.error(\"post update error\");\n      }\n    } catch (error) {\n      toast.error(\"post update error\");\n    }\n\n    setEditingPost(null);\n    setEditedPost({ title: \"\", body: \"\", userName: \"\" });\n  };\n\n  const handleCancel = () => {\n    setEditingPost(null);\n    setEditedPost({ title: \"\", body: \"\", userName: \"\" });\n  };\n\n  useEffect(() => {\n    const savedFavorites = localStorage.getItem(\"favoritePosts\");\n    if (savedFavorites) {\n      setFavoritePosts(JSON.parse(savedFavorites));\n    } else {\n      setFavoritePosts([]);\n    }\n  }, [selectedPosts]);\n\n  const handleDelete = async (id) => {\n    deletePost(id);\n  };\n  const handleButtonClick = (postId) => {\n    setSelectedPostId(postId);\n  };\n\n  const handleComment = (postId) => {\n    if (selectedPostForComments === postId) {\n      setSelectedPostForComments(null);\n      setSelectedComments([]);\n    } else {\n      const commentsForPost = comments.filter(\n        (comment) => comment.postId === postId\n      );\n      setSelectedComments(commentsForPost);\n      setSelectedPostForComments(postId);\n    }\n  };\n\n  const handleAddToFavorities = () => {\n    const currentFavoritePosts =\n      JSON.parse(localStorage.getItem(\"favoritePosts\")) || [];\n    const newFavoritePosts = [\n      ...new Set([...currentFavoritePosts, ...selectedPosts]),\n    ];\n    localStorage.setItem(\"favoritePosts\", JSON.stringify(newFavoritePosts));\n    setFavoritePosts(newFavoritePosts);\n    toast.success(\"posts added to favorites!\");\n  };\n\n  const handleFavorite = (postId) => {\n    if (favoritePosts.includes(postId)) {\n      const newFavoritePosts = favoritePosts.filter((id) => id !== postId);\n      setFavoritePosts(newFavoritePosts);\n      localStorage.setItem(\"favoritePosts\", JSON.stringify(newFavoritePosts));\n      toast.error(\" post deleted to favorites!\");\n    } else {\n      const newFavoritePosts = [...favoritePosts, postId];\n      setFavoritePosts(newFavoritePosts);\n      localStorage.setItem(\"favoritePosts\", JSON.stringify(newFavoritePosts));\n      toast.success(\"post added to favorites!\");\n    }\n  };\n\n  const handleDeleteFromFavorities = () => {\n    deletePostsFromFavorites(selectedPosts, favoritePosts);\n  };\n\n  return (\n    <Layout>\n      <ModalForDelete\n        id={selectedPostId}\n        isVisabilityModal={isVisabilityModal}\n        handleDelete={handleDelete}\n        setIsVisabilityModal={setIsVisabilityModal}\n      />\n      <ModalWindowAddToFavorites\n        handleAddToFavorities={handleAddToFavorities}\n        isVisabilityModalOfFavorities={isVisabilityModalOfFavorities}\n        setIsVisabilityModalOfFavorities={setIsVisabilityModalOfFavorities}\n      />\n      <ModalWindowByDeleteAllCheckedPosts\n        setIsVisabilityModalOfDeleteCheckedPosts={\n          setIsVisabilityModalOfDeleteCheckedPosts\n        }\n        isVisabilityModalOfDeleteCheckedPosts={\n          isVisabilityModalOfDeleteCheckedPosts\n        }\n        handleDeleteFromFavorities={handleDeleteFromFavorities}\n      />\n      <CheckBox postsPerPage={postsPerPage} changePage={changePage} />\n      <div className={styles.container}>\n        {currentPosts.map((post) => {\n          if (editingPost === post.id) {\n            return (\n              <div\n                key={post.id}\n                className=\"d-flex flex-column bg-light p-3 m-1 rounded\"\n              >\n                <FormForUpdatePost\n                  editedPost={editedPost}\n                  setEditedPost={setEditedPost}\n                  handleSave={handleSave}\n                  handleCancel={handleCancel}\n                />\n              </div>\n            );\n          }\n\n          return (\n            <MyCard\n              key={post.id}\n              post={post}\n              favoritePosts={favoritePosts}\n              selectedComments={selectedComments}\n              selectedPostForComments={selectedPostForComments}\n              selectedPosts={selectedPosts}\n              handleButtonClick={handleButtonClick}\n              handleEdit={handleEdit}\n              setSelectedPosts={setSelectedPosts}\n              handleFavorite={handleFavorite}\n              handleComment={handleComment}\n              setIsVisabilityModal={setIsVisabilityModal}\n            />\n          );\n        })}\n      </div>\n      {selectedPosts.length > 0 && (\n        <div className=\"d-flex justify-content-center gap-5\">\n          <Button\n            onClick={() => setIsVisabilityModalOfDeleteCheckedPosts(true)}\n          >\n            Delete\n          </Button>\n          <Button onClick={() => setIsVisabilityModalOfFavorities(true)}>\n            Add\n          </Button>\n        </div>\n      )}\n\n      <Pagination\n        somethingPerPage={postsPerPage}\n        totalSomething={posts.length}\n        setCurrentPage={setCurrentPage}\n        currentPage={currentPage}\n        paginate={paginate}\n      />\n    </Layout>\n  );\n};\n\nexport default Posts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}