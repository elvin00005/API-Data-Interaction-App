{"ast":null,"code":"var _jsxFileName = \"/Users/elvin/Documents/practica/test/src/components/postComponents/MyCard.jsx\";\nimport React from \"react\";\nimport { Card, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyCard = () => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: `text-center m-1 p-2 ${favoritePosts.includes(post.id) ? \"bg-warning\" : \"bg-light\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n        className: styles.check,\n        checked: selectedPosts.includes(post.id),\n        onChange: e => {\n          if (e.target.checked) {\n            setSelectedPosts([...selectedPosts, post.id]);\n          } else {\n            setSelectedPosts(selectedPosts.filter(postId => postId !== post.id));\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: post.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center gap-5\",\n      children: [/*#__PURE__*/_jsxDEV(EditButton, {\n        onClick: () => handleEdit(post)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonToAddToFavorites, {\n        onClick: () => handleFavorite(post.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n        onClick: () => {\n          handleButtonClick(post.id);\n          setIsVisabilityModal(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentButton, {\n        className: selectedPostForComments === post.id ? styles.commentButtonActive : \"\",\n        onClick: () => {\n          handleComment(post.id);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), selectedPostForComments === post.id && selectedComments.map(comments => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-1 p-2 bg-info rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: comments.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: comments.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comments.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, comments.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this);\n    })]\n  }, post.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = MyCard;\nexport default MyCard;\nvar _c;\n$RefreshReg$(_c, \"MyCard\");","map":{"version":3,"names":["React","Card","Form","jsxDEV","_jsxDEV","MyCard","className","favoritePosts","includes","post","id","children","Check","styles","check","checked","selectedPosts","onChange","e","target","setSelectedPosts","filter","postId","fileName","_jsxFileName","lineNumber","columnNumber","title","userName","body","EditButton","onClick","handleEdit","ButtonToAddToFavorites","handleFavorite","DeleteButton","handleButtonClick","setIsVisabilityModal","CommentButton","selectedPostForComments","commentButtonActive","handleComment","selectedComments","map","comments","email","name","_c","$RefreshReg$"],"sources":["/Users/elvin/Documents/practica/test/src/components/postComponents/MyCard.jsx"],"sourcesContent":["import React from \"react\";\nimport { Card, Form } from \"react-bootstrap\";\n\nconst MyCard = () => {\n  return (\n    <Card\n      key={post.id}\n      className={`text-center m-1 p-2 ${\n        favoritePosts.includes(post.id) ? \"bg-warning\" : \"bg-light\"\n      }`}\n    >\n      <div>\n        <Form.Check\n          className={styles.check}\n          checked={selectedPosts.includes(post.id)}\n          onChange={(e) => {\n            if (e.target.checked) {\n              setSelectedPosts([...selectedPosts, post.id]);\n            } else {\n              setSelectedPosts(\n                selectedPosts.filter((postId) => postId !== post.id)\n              );\n            }\n          }}\n        />\n\n        <h3>{post.title}</h3>\n        <h5>{post.userName}</h5>\n        <p>{post.body}</p>\n      </div>\n\n      <div className=\"d-flex justify-content-center gap-5\">\n        <EditButton onClick={() => handleEdit(post)} />\n        <ButtonToAddToFavorites onClick={() => handleFavorite(post.id)} />\n        <DeleteButton\n          onClick={() => {\n            handleButtonClick(post.id);\n            setIsVisabilityModal(true);\n          }}\n        />\n        <CommentButton\n          className={\n            selectedPostForComments === post.id\n              ? styles.commentButtonActive\n              : \"\"\n          }\n          onClick={() => {\n            handleComment(post.id);\n          }}\n        />\n      </div>\n      {selectedPostForComments === post.id &&\n        selectedComments.map((comments) => {\n          return (\n            <div\n              key={comments.id}\n              className=\"m-1 p-2 bg-info\n            rounded\"\n            >\n              <h4>{comments.email}</h4>\n              <h5>{comments.name}</h5>\n              <p>{comments.body}</p>\n            </div>\n          );\n        })}\n    </Card>\n  );\n};\n\nexport default MyCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}