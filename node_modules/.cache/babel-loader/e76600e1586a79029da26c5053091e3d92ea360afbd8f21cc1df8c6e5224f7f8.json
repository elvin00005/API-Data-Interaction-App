{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-hot-toast\";\nexport const useDeletePost = setPosts => {\n  const deletePost = async id => {\n    console.log(id);\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/posts/${id}`);\n      setPosts(prevPosts => prevPosts.filter(post => post.id !== id));\n      toast.success(\"post deleted\");\n    } catch (error) {\n      toast.error(\"post not deleted\");\n    }\n  };\n  return {\n    deletePost\n  };\n};","map":{"version":3,"names":["axios","toast","useDeletePost","setPosts","deletePost","id","console","log","delete","prevPosts","filter","post","success","error"],"sources":["/Users/elvin/Documents/practica/test/src/utilities/hooks/useDeletePosts.js"],"sourcesContent":["import axios from \"axios\";\nimport { toast } from \"react-hot-toast\";\n\nexport const useDeletePost = (setPosts) => {\n  const deletePost = async (id) => {\n    console.log(id);\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/posts/${id}`);\n      setPosts((prevPosts) => prevPosts.filter((post) => post.id !== id));\n      toast.success(\"post deleted\");\n    } catch (error) {\n      toast.error(\"post not deleted\");\n    }\n  };\n\n  return { deletePost };\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,iBAAiB;AAEvC,OAAO,MAAMC,aAAa,GAAIC,QAAQ,IAAK;EACzC,MAAMC,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC/BC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;IACf,IAAI;MACF,MAAML,KAAK,CAACQ,MAAM,CAAE,8CAA6CH,EAAG,EAAC,CAAC;MACtEF,QAAQ,CAAEM,SAAS,IAAKA,SAAS,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACN,EAAE,KAAKA,EAAE,CAAC,CAAC;MACnEJ,KAAK,CAACW,OAAO,CAAC,cAAc,CAAC;IAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdZ,KAAK,CAACY,KAAK,CAAC,kBAAkB,CAAC;IACjC;EACF,CAAC;EAED,OAAO;IAAET;EAAW,CAAC;AACvB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}