{"ast":null,"code":"var _jsxFileName = \"/Users/elvin/Documents/practica/test/src/utilities/context/favoritiesAlbumsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoriteContext = /*#__PURE__*/createContext(null);\nexport function FavoriteProviderALbums(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [favoriteAlbums, setFavoriteAlbums] = useState(JSON.parse(localStorage.getItem(\"favoriteAlbums\")) || []);\n  const [showFavorites, setShowFavorites] = useState(false);\n  const handleAddMultiplyToFavoritiesPostsAlbums = ids => {\n    const currentFavoritePosts = JSON.parse(localStorage.getItem(\"favoriteAlbums\")) || [];\n    const newFavorities = [...new Set([...currentFavoritePosts, ...ids])];\n    localStorage.setItem(\"favoriteAlbums\", JSON.stringify(newFavorities));\n    setFavoriteAlbums(newFavorities);\n    toast.success(\"posts added to Favorites!\");\n  };\n  const handleToggleAddFavoritePostsAlbums = postId => {\n    const hasInList = favoritePosts.includes(postId);\n    if (hasInList) {\n      const newFavoritePosts = favoritePosts.filter(id => id !== postId);\n      setFavoriteAlbums(newFavoritePosts);\n      localStorage.setItem(\"favoriteAlbums\", JSON.stringify(newFavoritePosts));\n      toast.success(\" post deleted to Favorites!\");\n    } else {\n      const newFavoritePosts = [...favoritePosts, postId];\n      setFavoriteAlbums(newFavoritePosts);\n      localStorage.setItem(\"favoriteAlbums\", JSON.stringify(newFavoritePosts));\n      toast.success(\"post added to Favorites!\");\n    }\n  };\n  const handleRemoveMultiplyToFavoritiesPostsAlbums = () => {\n    setFavoritePosts([]);\n    localStorage.setItem(\"favoriteAlbums\", JSON.stringify([]));\n  };\n  const value = {\n    handleAddMultiplyToFavoritiesPostsAlbums,\n    handleToggleAddFavoritePostsAlbums,\n    handleRemoveMultiplyToFavoritiesPostsAlbums,\n    favoriteAlbums,\n    setFavoriteAlbums,\n    showFavorites,\n    setShowFavorites\n  };\n  return /*#__PURE__*/_jsxDEV(FavoriteContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(FavoriteProviderALbums, \"6Sxev3V6HkKnLAD//U9H4Dt6ifc=\");\n_c = FavoriteProviderALbums;\nexport const useFavoriteAlbums = () => {\n  _s2();\n  return useContext(FavoriteContext);\n};\n_s2(useFavoriteAlbums, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"FavoriteProviderALbums\");","map":{"version":3,"names":["createContext","useContext","useState","toast","jsxDEV","_jsxDEV","FavoriteContext","FavoriteProviderALbums","_ref","_s","children","favoriteAlbums","setFavoriteAlbums","JSON","parse","localStorage","getItem","showFavorites","setShowFavorites","handleAddMultiplyToFavoritiesPostsAlbums","ids","currentFavoritePosts","newFavorities","Set","setItem","stringify","success","handleToggleAddFavoritePostsAlbums","postId","hasInList","favoritePosts","includes","newFavoritePosts","filter","id","handleRemoveMultiplyToFavoritiesPostsAlbums","setFavoritePosts","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useFavoriteAlbums","_s2","$RefreshReg$"],"sources":["/Users/elvin/Documents/practica/test/src/utilities/context/favoritiesAlbumsContext.js"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\n\nconst FavoriteContext = createContext(null);\n\nexport function FavoriteProviderALbums({ children }) {\n  const [favoriteAlbums, setFavoriteAlbums] = useState(\n    JSON.parse(localStorage.getItem(\"favoriteAlbums\")) || []\n  );\n  const [showFavorites, setShowFavorites] = useState(false);\n\n  const handleAddMultiplyToFavoritiesPostsAlbums = (ids) => {\n    const currentFavoritePosts =\n      JSON.parse(localStorage.getItem(\"favoriteAlbums\")) || [];\n    const newFavorities = [...new Set([...currentFavoritePosts, ...ids])];\n    localStorage.setItem(\"favoriteAlbums\", JSON.stringify(newFavorities));\n    setFavoriteAlbums(newFavorities);\n    toast.success(\"posts added to Favorites!\");\n  };\n\n  const handleToggleAddFavoritePostsAlbums = (postId) => {\n    const hasInList = favoritePosts.includes(postId);\n    if (hasInList) {\n      const newFavoritePosts = favoritePosts.filter((id) => id !== postId);\n      setFavoriteAlbums(newFavoritePosts);\n      localStorage.setItem(\"favoriteAlbums\", JSON.stringify(newFavoritePosts));\n      toast.success(\" post deleted to Favorites!\");\n    } else {\n      const newFavoritePosts = [...favoritePosts, postId];\n      setFavoriteAlbums(newFavoritePosts);\n      localStorage.setItem(\"favoriteAlbums\", JSON.stringify(newFavoritePosts));\n      toast.success(\"post added to Favorites!\");\n    }\n  };\n\n  const handleRemoveMultiplyToFavoritiesPostsAlbums = () => {\n    setFavoritePosts([]);\n    localStorage.setItem(\"favoriteAlbums\", JSON.stringify([]));\n  };\n\n  const value = {\n    handleAddMultiplyToFavoritiesPostsAlbums,\n    handleToggleAddFavoritePostsAlbums,\n    handleRemoveMultiplyToFavoritiesPostsAlbums,\n    favoriteAlbums,\n    setFavoriteAlbums,\n    showFavorites,\n    setShowFavorites,\n  };\n  return (\n    <FavoriteContext.Provider value={value}>\n      {children}\n    </FavoriteContext.Provider>\n  );\n}\n\nexport const useFavoriteAlbums = () => useContext(FavoriteContext);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}