{"ast":null,"code":"var _s = $RefreshSig$();\nimport { usePosts } from \"../context/postsContext\";\nimport { useFavorite } from \"../context/favoritiesPostsContext\";\nimport { useState, useMemo } from \"react\";\nexport function useFilterPosts() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const {\n    favoritePosts,\n    showFavorites,\n    setShowFavorites\n  } = useFavorite();\n  const {\n    posts\n  } = usePosts();\n  const [sortConfig, setSortConfig] = useState(null);\n  const userOptions = Array.from(new Set(posts.map(post => post.user.name))).map(name => ({\n    label: name,\n    value: name\n  }));\n  const filteredPosts = posts.filter(post => {\n    const titleMatch = post.title.toLowerCase().includes(searchTerm.toLowerCase());\n    const userMatch = selectedUsers.length === 0 || selectedUsers.find(user => user.value === post.userId);\n    const favoriteMatch = showFavorites ? favoritePosts.includes(post.id) : true;\n    return titleMatch && userMatch && favoriteMatch;\n  });\n  const sortedPosts = useMemo(() => {\n    let sortablePosts = [...filteredPosts];\n    if (sortConfig !== null) {\n      sortablePosts.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortablePosts;\n  }, [filteredPosts, sortConfig]);\n  const requestSort = key => {\n    let direction = \"ascending\";\n    if (sortConfig && sortConfig.key === key && sortConfig.direction === \"ascending\") {\n      direction = \"descending\";\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n  return {\n    sortedPosts,\n    userOptions,\n    searchTerm,\n    selectedUsers,\n    setSearchTerm,\n    setSelectedUsers,\n    setShowFavorites,\n    requestSort\n  };\n}\n_s(useFilterPosts, \"FtYMTFBJRNRcMFiNlLbUF6B1Ry0=\", false, function () {\n  return [useFavorite, usePosts];\n});","map":{"version":3,"names":["usePosts","useFavorite","useState","useMemo","useFilterPosts","_s","searchTerm","setSearchTerm","selectedUsers","setSelectedUsers","favoritePosts","showFavorites","setShowFavorites","posts","sortConfig","setSortConfig","userOptions","Array","from","Set","map","post","user","name","label","value","filteredPosts","filter","titleMatch","title","toLowerCase","includes","userMatch","length","find","userId","favoriteMatch","id","sortedPosts","sortablePosts","sort","a","b","key","direction","requestSort"],"sources":["/Users/elvin/Documents/practica/test/src/utilities/hooks/useFilterPosts.js"],"sourcesContent":["import { usePosts } from \"../context/postsContext\";\nimport { useFavorite } from \"../context/favoritiesPostsContext\";\nimport { useState, useMemo } from \"react\";\n\nexport function useFilterPosts() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const { favoritePosts, showFavorites, setShowFavorites } = useFavorite();\n  const { posts } = usePosts();\n  const [sortConfig, setSortConfig] = useState(null);\n\n  const userOptions = Array.from(\n    new Set(posts.map((post) => post.user.name))\n  ).map((name) => ({\n    label: name,\n    value: name,\n  }));\n\n  const filteredPosts = posts.filter((post) => {\n    const titleMatch = post.title\n      .toLowerCase()\n      .includes(searchTerm.toLowerCase());\n\n    const userMatch =\n      selectedUsers.length === 0 ||\n      selectedUsers.find((user) => user.value === post.userId);\n\n    const favoriteMatch = showFavorites\n      ? favoritePosts.includes(post.id)\n      : true;\n    return titleMatch && userMatch && favoriteMatch;\n  });\n\n  const sortedPosts = useMemo(() => {\n    let sortablePosts = [...filteredPosts];\n    if (sortConfig !== null) {\n      sortablePosts.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortablePosts;\n  }, [filteredPosts, sortConfig]);\n\n  const requestSort = (key) => {\n    let direction = \"ascending\";\n    if (\n      sortConfig &&\n      sortConfig.key === key &&\n      sortConfig.direction === \"ascending\"\n    ) {\n      direction = \"descending\";\n    }\n    setSortConfig({ key, direction });\n  };\n\n  return {\n    sortedPosts,\n    userOptions,\n    searchTerm,\n    selectedUsers,\n    setSearchTerm,\n    setSelectedUsers,\n    setShowFavorites,\n    requestSort,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}