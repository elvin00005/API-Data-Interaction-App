{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-hot-toast\";\nimport { useAlbums } from \"../context/albumsContext\";\n\n// export const useDeleteAlbumsFromSelect = (setSelectedAlbums) => {\n//   const { setFavoriteAlbums, setAlbums } = useAlbums();\n//   const deleteAlbums = async (selectedAlbums) => {\n//     const albumsToDelete = [...selectedAlbums];\n\n//     const deleteRequests = albumsToDelete.map((albumId) =>\n//       axios.delete(`https://jsonplaceholder.typicode.com/albums/${albumId}`)\n//     );\n//     try {\n//       await Promise.all(deleteRequests);\n\n//       setAlbums((prevAlbums) => {\n//         const filtered = prevAlbums.filter(\n//           (album) => !albumsToDelete.includes(album.id)\n//         );\n//         return filtered;\n//       });\n\n//       setFavoriteAlbums((prevFavoriteAlbums) => {\n//         const newFavoriteAlbums = prevFavoriteAlbums.filter(\n//           (albumId) => !albumsToDelete.includes(albumId)\n//         );\n//         localStorage.setItem(\n//           \"favoriteAlbums\",\n//           JSON.stringify(newFavoriteAlbums)\n//         );\n//         return newFavoriteAlbums;\n//       });\n\n//       setSelectedAlbums((prevSelectedAlbums) =>\n//         prevSelectedAlbums.filter(\n//           (albumId) => !albumsToDelete.includes(albumId)\n//         )\n//       );\n\n//       toast.success(\"Selected albums removed\");\n//     } catch (error) {\n//       toast.error(\"Failed to delete some albums\");\n//     }\n//   };\n\n//   return { deleteAlbums };\n// };","map":{"version":3,"names":["axios","toast","useAlbums"],"sources":["/Users/elvin/Documents/practica/test/src/utilities/hooks/useDeleteAlbumsFromSelect.js"],"sourcesContent":["import axios from \"axios\";\nimport { toast } from \"react-hot-toast\";\nimport { useAlbums } from \"../context/albumsContext\";\n\n// export const useDeleteAlbumsFromSelect = (setSelectedAlbums) => {\n//   const { setFavoriteAlbums, setAlbums } = useAlbums();\n//   const deleteAlbums = async (selectedAlbums) => {\n//     const albumsToDelete = [...selectedAlbums];\n\n//     const deleteRequests = albumsToDelete.map((albumId) =>\n//       axios.delete(`https://jsonplaceholder.typicode.com/albums/${albumId}`)\n//     );\n//     try {\n//       await Promise.all(deleteRequests);\n\n//       setAlbums((prevAlbums) => {\n//         const filtered = prevAlbums.filter(\n//           (album) => !albumsToDelete.includes(album.id)\n//         );\n//         return filtered;\n//       });\n\n//       setFavoriteAlbums((prevFavoriteAlbums) => {\n//         const newFavoriteAlbums = prevFavoriteAlbums.filter(\n//           (albumId) => !albumsToDelete.includes(albumId)\n//         );\n//         localStorage.setItem(\n//           \"favoriteAlbums\",\n//           JSON.stringify(newFavoriteAlbums)\n//         );\n//         return newFavoriteAlbums;\n//       });\n\n//       setSelectedAlbums((prevSelectedAlbums) =>\n//         prevSelectedAlbums.filter(\n//           (albumId) => !albumsToDelete.includes(albumId)\n//         )\n//       );\n\n//       toast.success(\"Selected albums removed\");\n//     } catch (error) {\n//       toast.error(\"Failed to delete some albums\");\n//     }\n//   };\n\n//   return { deleteAlbums };\n// };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,SAAS,QAAQ,0BAA0B;;AAEpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}