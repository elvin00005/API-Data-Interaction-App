{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nimport { usePosts } from \"../context/postsContext\";\nimport { useFavorite } from \"../context/favoritiesPostsContext\";\nexport default function useFilterPosts() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [showFavorites, setShowFavorites] = useState(false);\n  const {\n    favoritePosts\n  } = useFavorite();\n  const {\n    posts\n  } = usePosts();\n  const userOptions = posts.map(post => ({\n    value: post.id,\n    label: post.user.name\n  }));\n  const filteredPosts = posts.filter(post => post.title.toLowerCase().includes(searchTerm.toLowerCase()) && (selectedUsers.length === 0 || selectedUsers.find(user => user.value === post.userId)) && (!showFavorites || favoritePosts.includes(post.id)));\n}\n_s(useFilterPosts, \"fsZOEbKaUIh1D4HgwX69n1Fe9HQ=\", false, function () {\n  return [useFavorite, usePosts];\n});","map":{"version":3,"names":["React","usePosts","useFavorite","useFilterPosts","_s","searchTerm","setSearchTerm","useState","selectedUsers","setSelectedUsers","showFavorites","setShowFavorites","favoritePosts","posts","userOptions","map","post","value","id","label","user","name","filteredPosts","filter","title","toLowerCase","includes","length","find","userId"],"sources":["/Users/elvin/Documents/practica/test/src/utilities/hooks/useFilterPosts.js"],"sourcesContent":["import React from \"react\";\nimport { usePosts } from \"../context/postsContext\";\nimport { useFavorite } from \"../context/favoritiesPostsContext\";\n\nexport default function useFilterPosts() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [showFavorites, setShowFavorites] = useState(false);\n  const { favoritePosts } = useFavorite();\n\n  const { posts } = usePosts();\n\n  const userOptions = posts.map((post) => ({\n    value: post.id,\n    label: post.user.name,\n  }));\n\n  const filteredPosts = posts.filter(\n    (post) =>\n      post.title.toLowerCase().includes(searchTerm.toLowerCase()) &&\n      (selectedUsers.length === 0 ||\n        selectedUsers.find((user) => user.value === post.userId)) &&\n      (!showFavorites || favoritePosts.includes(post.id))\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,WAAW,QAAQ,mCAAmC;AAE/D,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM;IAAEK;EAAc,CAAC,GAAGV,WAAW,CAAC,CAAC;EAEvC,MAAM;IAAEW;EAAM,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EAE5B,MAAMa,WAAW,GAAGD,KAAK,CAACE,GAAG,CAAEC,IAAI,KAAM;IACvCC,KAAK,EAAED,IAAI,CAACE,EAAE;IACdC,KAAK,EAAEH,IAAI,CAACI,IAAI,CAACC;EACnB,CAAC,CAAC,CAAC;EAEH,MAAMC,aAAa,GAAGT,KAAK,CAACU,MAAM,CAC/BP,IAAI,IACHA,IAAI,CAACQ,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACrB,UAAU,CAACoB,WAAW,CAAC,CAAC,CAAC,KAC1DjB,aAAa,CAACmB,MAAM,KAAK,CAAC,IACzBnB,aAAa,CAACoB,IAAI,CAAER,IAAI,IAAKA,IAAI,CAACH,KAAK,KAAKD,IAAI,CAACa,MAAM,CAAC,CAAC,KAC1D,CAACnB,aAAa,IAAIE,aAAa,CAACc,QAAQ,CAACV,IAAI,CAACE,EAAE,CAAC,CACtD,CAAC;AACH;AAACd,EAAA,CApBuBD,cAAc;EAAA,QAIVD,WAAW,EAEnBD,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}