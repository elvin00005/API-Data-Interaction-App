{"ast":null,"code":"var _jsxFileName = \"/Users/elvin/Documents/practica/test/src/utilities/context/postsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext } from \"react\";\nimport { useGetPosts } from \"../hooks/useGetPosts\";\nimport { useFilterPosts } from \"../hooks/useFilterPosts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsContext = /*#__PURE__*/createContext(null);\nexport function PostsProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const methods = useGetPosts();\n  const filterMethods = useFilterPosts({\n    posts: methods.posts || []\n  });\n  return /*#__PURE__*/_jsxDEV(PostsContext.Provider, {\n    value: {\n      ...methods,\n      ...filterMethods\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(PostsProvider, \"F5x+VidPzUKB/CtqPGx+GwyhxAA=\", false, function () {\n  return [useGetPosts, useFilterPosts];\n});\n_c = PostsProvider;\nexport const usePosts = () => {\n  _s2();\n  return useContext(PostsContext);\n};\n_s2(usePosts, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"PostsProvider\");","map":{"version":3,"names":["createContext","useContext","useGetPosts","useFilterPosts","jsxDEV","_jsxDEV","PostsContext","PostsProvider","_ref","_s","children","methods","filterMethods","posts","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","usePosts","_s2","$RefreshReg$"],"sources":["/Users/elvin/Documents/practica/test/src/utilities/context/postsContext.js"],"sourcesContent":["import { createContext, useContext } from \"react\";\nimport { useGetPosts } from \"../hooks/useGetPosts\";\nimport { useFilterPosts } from \"../hooks/useFilterPosts\";\n\nconst PostsContext = createContext(null);\n\nexport function PostsProvider({ children }) {\n  const methods = useGetPosts();\n  const filterMethods = useFilterPosts({ posts: methods.posts || [] });\n\n  return (\n    <PostsContext.Provider value={{ ...methods, ...filterMethods }}>\n      {children}\n    </PostsContext.Provider>\n  );\n}\n\nexport const usePosts = () => useContext(PostsContext);\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACjD,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,cAAc,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,YAAY,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAExC,OAAO,SAASO,aAAaA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACxC,MAAMG,OAAO,GAAGT,WAAW,CAAC,CAAC;EAC7B,MAAMU,aAAa,GAAGT,cAAc,CAAC;IAAEU,KAAK,EAAEF,OAAO,CAACE,KAAK,IAAI;EAAG,CAAC,CAAC;EAEpE,oBACER,OAAA,CAACC,YAAY,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAE,GAAGJ,OAAO;MAAE,GAAGC;IAAc,CAAE;IAAAF,QAAA,EAC5DA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B;AAACV,EAAA,CATeF,aAAa;EAAA,QACXL,WAAW,EACLC,cAAc;AAAA;AAAAiB,EAAA,GAFtBb,aAAa;AAW7B,OAAO,MAAMc,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMrB,UAAU,CAACK,YAAY,CAAC;AAAA;AAACgB,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}