{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { COMMENT_API, POST_API, USER_API } from \"../const/const\";\nimport _ from \"lodash\";\nimport { useDeletePost } from \"./useDeletePost\";\nexport default function useGetPosts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const {\n    deletePost\n  } = useDeletePost(setPosts);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [showFavorites, setShowFavorites] = useState(false);\n  const editUser = (id, data) => {\n    setPosts(prev => {\n      return prev.map(post => {\n        const {\n          userName,\n          ...rest\n        } = data;\n        if (post.id === id) {\n          return {\n            ...post,\n            ...rest,\n            user: {\n              ...post.user,\n              name: userName\n            }\n          };\n        }\n        return post;\n      });\n    });\n  };\n  const getPostList = async () => {\n    return await Promise.all([axios.get(POST_API), axios.get(USER_API), axios.get(COMMENT_API)]);\n  };\n  useEffect(() => {\n    setLoading(true);\n    getPostList().then(_ref => {\n      let [posts, users, comments] = _ref;\n      const usersMap = _.keyBy(users.data, \"id\");\n      const commentsMap = _.groupBy(comments.data, \"postId\");\n      const postsWithCommentsAndUsers = posts.data.map(post => {\n        return {\n          ...post,\n          user: usersMap[post.userId],\n          comments: commentsMap[post.id]\n        };\n      });\n      setPosts(postsWithCommentsAndUsers);\n    }).catch(err => setError(true)).finally(() => setLoading(false));\n  }, []);\n\n  // const userOptions = users.map((user) => ({\n  //   value: user.id,\n  //   label: user.name,\n  // }));\n\n  // const filteredPosts = posts.filter(\n  //   (post) =>\n  //     post.title.toLowerCase().includes(searchTerm.toLowerCase()) &&\n  //     (selectedUsers.length === 0 ||\n  //       selectedUsers.find((user) => user.value === post.userId)) &&\n  //     (!showFavorites || favorites.includes(post.id))\n  // );\n\n  return {\n    posts,\n    setLoading,\n    error,\n    deletePost,\n    setPosts,\n    editUser\n    // filteredPosts,\n  };\n}\n_s(useGetPosts, \"7+cieJ5Kc3ycebm2476ef9/F43o=\", false, function () {\n  return [useDeletePost];\n});","map":{"version":3,"names":["axios","useEffect","useState","COMMENT_API","POST_API","USER_API","_","useDeletePost","useGetPosts","_s","posts","setPosts","deletePost","loading","setLoading","error","setError","searchTerm","setSearchTerm","selectedUsers","setSelectedUsers","showFavorites","setShowFavorites","editUser","id","data","prev","map","post","userName","rest","user","name","getPostList","Promise","all","get","then","_ref","users","comments","usersMap","keyBy","commentsMap","groupBy","postsWithCommentsAndUsers","userId","catch","err","finally"],"sources":["/Users/elvin/Documents/practica/test/src/utilities/hooks/useGetPosts.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { COMMENT_API, POST_API, USER_API } from \"../const/const\";\nimport _ from \"lodash\";\nimport { useDeletePost } from \"./useDeletePost\";\n\nexport default function useGetPosts() {\n  const [posts, setPosts] = useState([]);\n  const { deletePost } = useDeletePost(setPosts);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [showFavorites, setShowFavorites] = useState(false);\n  const editUser = (id, data) => {\n    setPosts((prev) => {\n      return prev.map((post) => {\n        const { userName, ...rest } = data;\n        if (post.id === id) {\n          return { ...post, ...rest, user: { ...post.user, name: userName } };\n        }\n        return post;\n      });\n    });\n  };\n  const getPostList = async () => {\n    return await Promise.all([\n      axios.get(POST_API),\n      axios.get(USER_API),\n      axios.get(COMMENT_API),\n    ]);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getPostList()\n      .then(([posts, users, comments]) => {\n        const usersMap = _.keyBy(users.data, \"id\");\n        const commentsMap = _.groupBy(comments.data, \"postId\");\n        const postsWithCommentsAndUsers = posts.data.map((post) => {\n          return {\n            ...post,\n            user: usersMap[post.userId],\n            comments: commentsMap[post.id],\n          };\n        });\n\n        setPosts(postsWithCommentsAndUsers);\n      })\n      .catch((err) => setError(true))\n      .finally(() => setLoading(false));\n  }, []);\n\n  // const userOptions = users.map((user) => ({\n  //   value: user.id,\n  //   label: user.name,\n  // }));\n\n  // const filteredPosts = posts.filter(\n  //   (post) =>\n  //     post.title.toLowerCase().includes(searchTerm.toLowerCase()) &&\n  //     (selectedUsers.length === 0 ||\n  //       selectedUsers.find((user) => user.value === post.userId)) &&\n  //     (!showFavorites || favorites.includes(post.id))\n  // );\n\n  return {\n    posts,\n    setLoading,\n    error,\n    deletePost,\n    setPosts,\n    editUser,\n    // filteredPosts,\n  };\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,gBAAgB;AAChE,OAAOC,CAAC,MAAM,QAAQ;AACtB,SAASC,aAAa,QAAQ,iBAAiB;AAE/C,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEU;EAAW,CAAC,GAAGL,aAAa,CAACI,QAAQ,CAAC;EAC9C,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAMqB,QAAQ,GAAGA,CAACC,EAAE,EAAEC,IAAI,KAAK;IAC7Bd,QAAQ,CAAEe,IAAI,IAAK;MACjB,OAAOA,IAAI,CAACC,GAAG,CAAEC,IAAI,IAAK;QACxB,MAAM;UAAEC,QAAQ;UAAE,GAAGC;QAAK,CAAC,GAAGL,IAAI;QAClC,IAAIG,IAAI,CAACJ,EAAE,KAAKA,EAAE,EAAE;UAClB,OAAO;YAAE,GAAGI,IAAI;YAAE,GAAGE,IAAI;YAAEC,IAAI,EAAE;cAAE,GAAGH,IAAI,CAACG,IAAI;cAAEC,IAAI,EAAEH;YAAS;UAAE,CAAC;QACrE;QACA,OAAOD,IAAI;MACb,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EACD,MAAMK,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,OAAO,MAAMC,OAAO,CAACC,GAAG,CAAC,CACvBnC,KAAK,CAACoC,GAAG,CAAChC,QAAQ,CAAC,EACnBJ,KAAK,CAACoC,GAAG,CAAC/B,QAAQ,CAAC,EACnBL,KAAK,CAACoC,GAAG,CAACjC,WAAW,CAAC,CACvB,CAAC;EACJ,CAAC;EAEDF,SAAS,CAAC,MAAM;IACda,UAAU,CAAC,IAAI,CAAC;IAChBmB,WAAW,CAAC,CAAC,CACVI,IAAI,CAACC,IAAA,IAA8B;MAAA,IAA7B,CAAC5B,KAAK,EAAE6B,KAAK,EAAEC,QAAQ,CAAC,GAAAF,IAAA;MAC7B,MAAMG,QAAQ,GAAGnC,CAAC,CAACoC,KAAK,CAACH,KAAK,CAACd,IAAI,EAAE,IAAI,CAAC;MAC1C,MAAMkB,WAAW,GAAGrC,CAAC,CAACsC,OAAO,CAACJ,QAAQ,CAACf,IAAI,EAAE,QAAQ,CAAC;MACtD,MAAMoB,yBAAyB,GAAGnC,KAAK,CAACe,IAAI,CAACE,GAAG,CAAEC,IAAI,IAAK;QACzD,OAAO;UACL,GAAGA,IAAI;UACPG,IAAI,EAAEU,QAAQ,CAACb,IAAI,CAACkB,MAAM,CAAC;UAC3BN,QAAQ,EAAEG,WAAW,CAACf,IAAI,CAACJ,EAAE;QAC/B,CAAC;MACH,CAAC,CAAC;MAEFb,QAAQ,CAACkC,yBAAyB,CAAC;IACrC,CAAC,CAAC,CACDE,KAAK,CAAEC,GAAG,IAAKhC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAC9BiC,OAAO,CAAC,MAAMnC,UAAU,CAAC,KAAK,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,OAAO;IACLJ,KAAK;IACLI,UAAU;IACVC,KAAK;IACLH,UAAU;IACVD,QAAQ;IACRY;IACA;EACF,CAAC;AACH;AAACd,EAAA,CAtEuBD,WAAW;EAAA,QAEVD,aAAa;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}