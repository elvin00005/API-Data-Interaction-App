{"ast":null,"code":"var _jsxFileName = \"/Users/elvin/Documents/practica/test/src/pages/Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport axios from \"axios\";\nimport { Card, Form } from \"react-bootstrap\";\nimport Pagination from \"../components/pagination/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [usersPerPage, setUsersPerPage] = useState(10);\n  const lastIndexUser = currentPage * usersPerPage;\n  const firstIndexUser = lastIndexUser - usersPerPage;\n  const paginate = number => setCurrentPage(number);\n  const changePage = value => {\n    setUsersPerPage(value);\n  };\n  useEffect(() => {\n    axios.get(\"https://jsonplaceholder.typicode.com/posts\").then(res => setPosts(res.data));\n  }, []);\n  useEffect(() => {\n    axios.get(\"https://jsonplaceholder.typicode.com/users\").then(res => setUsers(res.data));\n  }, []);\n  const processedList = posts.map(post => {\n    const user = users.find(user => user.id === post.userId);\n    if (user) {\n      return {\n        ...post,\n        userId: user.name\n      };\n    }\n    return post;\n  });\n  const currentUsers = processedList.slice(firstIndexUser, lastIndexUser);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex bg-white align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        \"aria-label\": \"Default select example\"\n        // className={styles.numberInp)}\n        ,\n        value: usersPerPage,\n        onChange: event => changePage(event.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"5\",\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"10\",\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"15\",\n          children: \"15\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"20\",\n          children: \"20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentUsers.map(post => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: post.userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      somethingPerPage: usersPerPage,\n      totalSomething: posts.length,\n      setCurrentPage: setCurrentPage,\n      currentPage: currentPage,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"MoSZn60PISyk2XTrP3SOk/Jsqck=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","Layout","axios","Card","Form","Pagination","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","users","setUsers","currentPage","setCurrentPage","usersPerPage","setUsersPerPage","lastIndexUser","firstIndexUser","paginate","number","changePage","value","get","then","res","data","processedList","map","post","user","find","id","userId","name","currentUsers","slice","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Select","onChange","event","target","title","body","somethingPerPage","totalSomething","length","_c","$RefreshReg$"],"sources":["/Users/elvin/Documents/practica/test/src/pages/Posts.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport axios from \"axios\";\nimport { Card, Form } from \"react-bootstrap\";\nimport Pagination from \"../components/pagination/Pagination\";\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [usersPerPage, setUsersPerPage] = useState(10);\n  const lastIndexUser = currentPage * usersPerPage;\n  const firstIndexUser = lastIndexUser - usersPerPage;\n\n  const paginate = (number) => setCurrentPage(number);\n  const changePage = (value) => {\n    setUsersPerPage(value);\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/posts\")\n      .then((res) => setPosts(res.data));\n  }, []);\n\n  useEffect(() => {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => setUsers(res.data));\n  }, []);\n\n  const processedList = posts.map((post) => {\n    const user = users.find((user) => user.id === post.userId);\n    if (user) {\n      return { ...post, userId: user.name };\n    }\n    return post;\n  });\n  const currentUsers = processedList.slice(firstIndexUser, lastIndexUser);\n\n  return (\n    <Layout>\n      <div className=\"d-flex bg-white align-items-center\">\n        <button>Show</button>\n        <Form.Select\n          aria-label=\"Default select example\"\n          // className={styles.numberInp)}\n          value={usersPerPage}\n          onChange={(event) => changePage(event.target.value)}\n        >\n          <option value=\"5\">5</option>\n          <option value=\"10\">10</option>\n          <option value=\"15\">15</option>\n          <option value=\"20\">20</option>\n        </Form.Select>\n      </div>\n      <div>\n        {currentUsers.map((post) => {\n          return (\n            <Card key={post.id} className=\"text-center\">\n              <h3>{post.title}</h3>\n              <h5>{post.userId}</h5>\n              <p>{post.body}</p>\n            </Card>\n          );\n        })}\n      </div>\n      <Pagination\n        somethingPerPage={usersPerPage}\n        totalSomething={posts.length}\n        setCurrentPage={setCurrentPage}\n        currentPage={currentPage}\n        paginate={paginate}\n      />\n    </Layout>\n  );\n};\n\nexport default Posts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}