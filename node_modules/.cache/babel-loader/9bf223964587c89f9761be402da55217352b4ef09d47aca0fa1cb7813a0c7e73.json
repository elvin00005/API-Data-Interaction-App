{"ast":null,"code":"var _jsxFileName = \"/Users/elvin/Documents/practica/test/src/pages/Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport axios from \"axios\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport Pagination from \"../components/pagination/Pagination\";\nimport styles from \"./Posts.module.scss\";\nimport usePagination from \"../utilities/hooks/usePagination\";\nimport { toast } from \"react-hot-toast\";\nimport ModalForDelete from \"../components/modalWindowForDelete/ModalWindowByDelete\";\nimport { ButtonToAddToFavorites, CommentButton, DeleteButton, EditButton } from \"../utilities/const/Buttons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [isVisabilityModal, setIsVisabilityModal] = useState(false);\n  const [selectedPostId, setSelectedPostId] = useState(null);\n  const [selectedComments, setSelectedComments] = useState([]);\n  const [selectedPostForComments, setSelectedPostForComments] = useState(null);\n  const [editingPost, setEditingPost] = useState(null);\n  const [editedTitle, setEditedTitle] = useState(\"\");\n  const [editedBody, setEditedBody] = useState(\"\");\n  const [editedUser, setEditedUser] = useState(\"\");\n  const [favoritePosts, setFavoritePosts] = useState(localStorage.getItem(\"favoritePosts\"));\n  const [selectedPosts, setSelectedPosts] = useState([]);\n  console.log(\"selectedPosts\", selectedPosts);\n  console.log(\"favoritePosts\", favoritePosts);\n  const handleEdit = post => {\n    setEditingPost(post.id);\n    setEditedTitle(post.title);\n    setEditedBody(post.body);\n    setEditedUser(post.userName);\n  };\n  const handleSave = async () => {\n    try {\n      const updatedPost = {\n        id: editingPost,\n        title: editedTitle,\n        body: editedBody,\n        userName: editedUser\n      };\n      const response = await axios.put(`https://jsonplaceholder.typicode.com/posts/${editingPost}`, updatedPost);\n      if (response.status === 200) {\n        const updatedPosts = posts.map(post => post.id === editingPost ? response.data : post);\n        setPosts(updatedPosts);\n        toast.success(\"пост обновлен\");\n      } else {\n        toast.error(\"post update error\");\n      }\n    } catch (error) {\n      toast.error(\"post update error\");\n    }\n    setEditingPost(null);\n    setEditedTitle(\"\");\n    setEditedBody(\"\");\n    setEditedUser(\"\");\n  };\n  const handleCancel = () => {\n    setEditingPost(null);\n    setEditedTitle(\"\");\n    setEditedBody(\"\");\n    setEditedUser(\"\");\n  };\n  const {\n    postsPerPage,\n    changePage,\n    setCurrentPage,\n    currentPage,\n    paginate,\n    currentPosts\n  } = usePagination({\n    users,\n    posts\n  });\n  useEffect(() => {\n    axios.get(\"https://jsonplaceholder.typicode.com/posts\").then(res => setPosts(res.data));\n  }, []);\n  useEffect(() => {\n    axios.get(\"https://jsonplaceholder.typicode.com/comments\").then(res => setComments(res.data));\n  }, []);\n  useEffect(() => {\n    axios.get(\"https://jsonplaceholder.typicode.com/users\").then(res => setUsers(res.data));\n  }, []);\n  useEffect(() => {\n    const savedFavorites = localStorage.getItem(\"favoritePosts\");\n    if (savedFavorites) {\n      setFavoritePosts(JSON.parse(savedFavorites));\n    } else {\n      setFavoritePosts([]);\n    }\n  }, [selectedPosts]);\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/posts/${id}`);\n      setPosts(posts.filter(post => post.id !== id));\n      toast.success(\"post deleted\");\n    } catch (error) {\n      toast.error(\"post not deleted\");\n    }\n  };\n  const handleButtonClick = postId => {\n    setSelectedPostId(postId);\n  };\n  const handleComment = postId => {\n    if (selectedPostForComments === postId) {\n      setSelectedPostForComments(null);\n      setSelectedComments([]);\n    } else {\n      const commentsForPost = comments.filter(comment => comment.postId === postId);\n      setSelectedComments(commentsForPost);\n      setSelectedPostForComments(postId);\n    }\n  };\n  const handleFavorite = postId => {\n    if (favoritePosts.includes(postId)) {\n      const newFavoritePosts = favoritePosts.filter(id => id !== postId);\n      setFavoritePosts(newFavoritePosts);\n      localStorage.setItem(\"favoritePosts\", JSON.stringify(newFavoritePosts));\n    } else {\n      const newFavoritePosts = [...favoritePosts, postId];\n      setFavoritePosts(newFavoritePosts);\n      localStorage.setItem(\"favoritePosts\", JSON.stringify(newFavoritePosts));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(ModalForDelete, {\n      id: selectedPostId,\n      isVisabilityModal: isVisabilityModal,\n      handleDelete: handleDelete,\n      setIsVisabilityModal: setIsVisabilityModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex bg-white align-items-center p-3 m-1 rounded gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        children: \"Show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        \"aria-label\": \"Default select example\",\n        className: \"w-auto\",\n        value: postsPerPage,\n        onChange: event => changePage(event.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"10\",\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"20\",\n          children: \"20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"50\",\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"100\",\n          children: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: currentPosts.map(post => {\n        if (editingPost === post.id) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column bg-light p-3 m-1 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"formBasicUser\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"fw-bold fs-5\",\n                  children: \"User\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  className: \"p-2\",\n                  value: editedUser,\n                  onChange: e => setEditedUser(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"formBasicTitle\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"fw-bold fs-5\",\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  className: \"p-2\",\n                  value: editedTitle,\n                  onChange: e => setEditedTitle(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"formBasicBody\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"fw-bold fs-5\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  className: \"p-2\",\n                  as: \"textarea\",\n                  value: editedBody,\n                  onChange: e => setEditedBody(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-5 justify-content-center\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleSave,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleCancel,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)]\n          }, post.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(Card, {\n          className: `text-center m-1 p-2 ${favoritePosts.includes(post.id) ? \"bg-warning\" : \"bg-light\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              className: styles.check,\n              checked: selectedPosts.includes(post.id),\n              onChange: e => {\n                if (e.target.checked) {\n                  setSelectedPosts([...selectedPosts, post.id]);\n                } else {\n                  setSelectedPosts(selectedPosts.filter(postId => postId !== post.id));\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: post.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-center gap-5\",\n            children: [/*#__PURE__*/_jsxDEV(EditButton, {\n              onClick: () => handleEdit(post)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ButtonToAddToFavorites, {\n              onClick: () => handleFavorite(post.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n              onClick: () => {\n                handleButtonClick(post.id);\n                setIsVisabilityModal(true);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CommentButton, {\n              className: selectedPostForComments === post.id ? styles.commentButtonActive : \"\",\n              onClick: () => {\n                handleComment(post.id);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), selectedPostForComments === post.id && selectedComments.map(comments => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"m-1 p-2 bg-info rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: comments.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: comments.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: comments.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 23\n              }, this)]\n            }, comments.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 21\n            }, this);\n          })]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), selectedPosts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center gap-5\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsVisabilityModal(true),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          const newFavoritePosts = JSON.stringify([...favoritePosts, ...selectedPosts]);\n          localStorage.setItem(\"favoritePosts\", newFavoritePosts);\n          setFavoritePosts(newFavoritePosts);\n        },\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      somethingPerPage: postsPerPage,\n      totalSomething: posts.length,\n      setCurrentPage: setCurrentPage,\n      currentPage: currentPage,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"6ufPqY3edxQkGHq+a2tMsMjkotI=\", false, function () {\n  return [usePagination];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","Layout","axios","Button","Card","Form","Pagination","styles","usePagination","toast","ModalForDelete","ButtonToAddToFavorites","CommentButton","DeleteButton","EditButton","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","users","setUsers","comments","setComments","isVisabilityModal","setIsVisabilityModal","selectedPostId","setSelectedPostId","selectedComments","setSelectedComments","selectedPostForComments","setSelectedPostForComments","editingPost","setEditingPost","editedTitle","setEditedTitle","editedBody","setEditedBody","editedUser","setEditedUser","favoritePosts","setFavoritePosts","localStorage","getItem","selectedPosts","setSelectedPosts","console","log","handleEdit","post","id","title","body","userName","handleSave","updatedPost","response","put","status","updatedPosts","map","data","success","error","handleCancel","postsPerPage","changePage","setCurrentPage","currentPage","paginate","currentPosts","get","then","res","savedFavorites","JSON","parse","handleDelete","delete","filter","handleButtonClick","postId","handleComment","commentsForPost","comment","handleFavorite","includes","newFavoritePosts","setItem","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Select","value","onChange","event","target","container","Group","controlId","Label","Control","e","as","onClick","Check","check","checked","commentButtonActive","email","name","length","somethingPerPage","totalSomething","_c","$RefreshReg$"],"sources":["/Users/elvin/Documents/practica/test/src/pages/Posts.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport axios from \"axios\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport Pagination from \"../components/pagination/Pagination\";\n\nimport styles from \"./Posts.module.scss\";\nimport usePagination from \"../utilities/hooks/usePagination\";\nimport { toast } from \"react-hot-toast\";\nimport ModalForDelete from \"../components/modalWindowForDelete/ModalWindowByDelete\";\nimport {\n  ButtonToAddToFavorites,\n  CommentButton,\n  DeleteButton,\n  EditButton,\n} from \"../utilities/const/Buttons\";\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [isVisabilityModal, setIsVisabilityModal] = useState(false);\n  const [selectedPostId, setSelectedPostId] = useState(null);\n  const [selectedComments, setSelectedComments] = useState([]);\n  const [selectedPostForComments, setSelectedPostForComments] = useState(null);\n  const [editingPost, setEditingPost] = useState(null);\n  const [editedTitle, setEditedTitle] = useState(\"\");\n  const [editedBody, setEditedBody] = useState(\"\");\n  const [editedUser, setEditedUser] = useState(\"\");\n  const [favoritePosts, setFavoritePosts] = useState(\n    localStorage.getItem(\"favoritePosts\")\n  );\n  const [selectedPosts, setSelectedPosts] = useState([]);\n\n  console.log(\"selectedPosts\", selectedPosts);\n  console.log(\"favoritePosts\", favoritePosts);\n  const handleEdit = (post) => {\n    setEditingPost(post.id);\n    setEditedTitle(post.title);\n    setEditedBody(post.body);\n    setEditedUser(post.userName);\n  };\n\n  const handleSave = async () => {\n    try {\n      const updatedPost = {\n        id: editingPost,\n        title: editedTitle,\n        body: editedBody,\n        userName: editedUser,\n      };\n      const response = await axios.put(\n        `https://jsonplaceholder.typicode.com/posts/${editingPost}`,\n        updatedPost\n      );\n\n      if (response.status === 200) {\n        const updatedPosts = posts.map((post) =>\n          post.id === editingPost ? response.data : post\n        );\n        setPosts(updatedPosts);\n        toast.success(\"пост обновлен\");\n      } else {\n        toast.error(\"post update error\");\n      }\n    } catch (error) {\n      toast.error(\"post update error\");\n    }\n\n    setEditingPost(null);\n    setEditedTitle(\"\");\n    setEditedBody(\"\");\n    setEditedUser(\"\");\n  };\n\n  const handleCancel = () => {\n    setEditingPost(null);\n    setEditedTitle(\"\");\n    setEditedBody(\"\");\n    setEditedUser(\"\");\n  };\n\n  const {\n    postsPerPage,\n    changePage,\n    setCurrentPage,\n    currentPage,\n    paginate,\n    currentPosts,\n  } = usePagination({ users, posts });\n\n  useEffect(() => {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/posts\")\n      .then((res) => setPosts(res.data));\n  }, []);\n\n  useEffect(() => {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/comments\")\n      .then((res) => setComments(res.data));\n  }, []);\n  useEffect(() => {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => setUsers(res.data));\n  }, []);\n\n  useEffect(() => {\n    const savedFavorites = localStorage.getItem(\"favoritePosts\");\n    if (savedFavorites) {\n      setFavoritePosts(JSON.parse(savedFavorites));\n    } else {\n      setFavoritePosts([]);\n    }\n  }, [selectedPosts]);\n\n  const handleDelete = async (id) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/posts/${id}`);\n      setPosts(posts.filter((post) => post.id !== id));\n      toast.success(\"post deleted\");\n    } catch (error) {\n      toast.error(\"post not deleted\");\n    }\n  };\n  const handleButtonClick = (postId) => {\n    setSelectedPostId(postId);\n  };\n\n  const handleComment = (postId) => {\n    if (selectedPostForComments === postId) {\n      setSelectedPostForComments(null);\n      setSelectedComments([]);\n    } else {\n      const commentsForPost = comments.filter(\n        (comment) => comment.postId === postId\n      );\n      setSelectedComments(commentsForPost);\n      setSelectedPostForComments(postId);\n    }\n  };\n\n  const handleFavorite = (postId) => {\n    if (favoritePosts.includes(postId)) {\n      const newFavoritePosts = favoritePosts.filter((id) => id !== postId);\n      setFavoritePosts(newFavoritePosts);\n      localStorage.setItem(\"favoritePosts\", JSON.stringify(newFavoritePosts));\n    } else {\n      const newFavoritePosts = [...favoritePosts, postId];\n      setFavoritePosts(newFavoritePosts);\n      localStorage.setItem(\"favoritePosts\", JSON.stringify(newFavoritePosts));\n    }\n  };\n\n  return (\n    <Layout>\n      <ModalForDelete\n        id={selectedPostId}\n        isVisabilityModal={isVisabilityModal}\n        handleDelete={handleDelete}\n        setIsVisabilityModal={setIsVisabilityModal}\n      />\n      <div className=\"d-flex bg-white align-items-center p-3 m-1 rounded gap-2\">\n        <Button>Show</Button>\n        <Form.Select\n          aria-label=\"Default select example\"\n          className=\"w-auto\"\n          value={postsPerPage}\n          onChange={(event) => changePage(event.target.value)}\n        >\n          <option value=\"10\">10</option>\n          <option value=\"20\">20</option>\n          <option value=\"50\">50</option>\n          <option value=\"100\">100</option>\n        </Form.Select>\n      </div>\n      <div className={styles.container}>\n        {currentPosts.map((post) => {\n          if (editingPost === post.id) {\n            return (\n              <div\n                key={post.id}\n                className=\"d-flex flex-column bg-light p-3 m-1 rounded\"\n              >\n                <Form>\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicUser\">\n                    <Form.Label className=\"fw-bold fs-5\">User</Form.Label>\n                    <Form.Control\n                      className=\"p-2\"\n                      value={editedUser}\n                      onChange={(e) => setEditedUser(e.target.value)}\n                    />\n                  </Form.Group>\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicTitle\">\n                    <Form.Label className=\"fw-bold fs-5\">Title</Form.Label>\n                    <Form.Control\n                      className=\"p-2\"\n                      value={editedTitle}\n                      onChange={(e) => setEditedTitle(e.target.value)}\n                    />\n                  </Form.Group>\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicBody\">\n                    <Form.Label className=\"fw-bold fs-5\">\n                      Description\n                    </Form.Label>\n                    <Form.Control\n                      className=\"p-2\"\n                      as=\"textarea\"\n                      value={editedBody}\n                      onChange={(e) => setEditedBody(e.target.value)}\n                    />\n                  </Form.Group>\n                </Form>\n                <div className=\"d-flex gap-5 justify-content-center\">\n                  <Button onClick={handleSave}>Save</Button>\n                  <Button onClick={handleCancel}>Cancel</Button>\n                </div>\n              </div>\n            );\n          }\n\n          return (\n            <Card\n              key={post.id}\n              className={`text-center m-1 p-2 ${\n                favoritePosts.includes(post.id) ? \"bg-warning\" : \"bg-light\"\n              }`}\n            >\n              <div>\n                <Form.Check\n                  className={styles.check}\n                  checked={selectedPosts.includes(post.id)}\n                  onChange={(e) => {\n                    if (e.target.checked) {\n                      setSelectedPosts([...selectedPosts, post.id]);\n                    } else {\n                      setSelectedPosts(\n                        selectedPosts.filter((postId) => postId !== post.id)\n                      );\n                    }\n                  }}\n                />\n\n                <h3>{post.title}</h3>\n                <h5>{post.userName}</h5>\n                <p>{post.body}</p>\n              </div>\n\n              <div className=\"d-flex justify-content-center gap-5\">\n                <EditButton onClick={() => handleEdit(post)} />\n                <ButtonToAddToFavorites\n                  onClick={() => handleFavorite(post.id)}\n                />\n                <DeleteButton\n                  onClick={() => {\n                    handleButtonClick(post.id);\n                    setIsVisabilityModal(true);\n                  }}\n                />\n                <CommentButton\n                  className={\n                    selectedPostForComments === post.id\n                      ? styles.commentButtonActive\n                      : \"\"\n                  }\n                  onClick={() => {\n                    handleComment(post.id);\n                  }}\n                />\n              </div>\n              {selectedPostForComments === post.id &&\n                selectedComments.map((comments) => {\n                  return (\n                    <div\n                      key={comments.id}\n                      className=\"m-1 p-2 bg-info\n                      rounded\"\n                    >\n                      <h4>{comments.email}</h4>\n                      <h5>{comments.name}</h5>\n                      <p>{comments.body}</p>\n                    </div>\n                  );\n                })}\n            </Card>\n          );\n        })}\n      </div>\n      {selectedPosts.length > 0 && (\n        <div className=\"d-flex justify-content-center gap-5\">\n          <Button onClick={() => setIsVisabilityModal(true)}>Delete</Button>\n          <Button\n            onClick={() => {\n              const newFavoritePosts = JSON.stringify([\n                ...favoritePosts,\n                ...selectedPosts,\n              ]);\n              localStorage.setItem(\"favoritePosts\", newFavoritePosts);\n              setFavoritePosts(newFavoritePosts);\n            }}\n          >\n            Add\n          </Button>\n        </div>\n      )}\n\n      <Pagination\n        somethingPerPage={postsPerPage}\n        totalSomething={posts.length}\n        setCurrentPage={setCurrentPage}\n        currentPage={currentPage}\n        paginate={paginate}\n      />\n    </Layout>\n  );\n};\n\nexport default Posts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}