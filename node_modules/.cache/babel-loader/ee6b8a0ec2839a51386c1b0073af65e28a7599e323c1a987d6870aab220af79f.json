{"ast":null,"code":"var _jsxFileName = \"/Users/elvin/Documents/practica/test/src/pages/Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport axios from \"axios\";\nimport { Card } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    axios.get(\"https://jsonplaceholder.typicode.com/posts\").then(res => setPosts(res.data));\n  }, []);\n  useEffect(() => {\n    axios.get(\"https://jsonplaceholder.typicode.com/users\").then(res => setUsers(res.data));\n  }, []);\n  const filteredList = posts.filter(post => {\n    if (post.userId === users.id) {\n      console.log(\"hh\");\n      return [...posts, post.userId = users.name];\n    }\n  });\n  console.log(filteredList);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredList.map(post => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: post.userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"q3FGgHO56t/3rThyRzAewyTsjTY=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","Layout","axios","Card","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","users","setUsers","get","then","res","data","filteredList","filter","post","userId","id","console","log","name","children","map","title","fileName","_jsxFileName","lineNumber","columnNumber","body","_c","$RefreshReg$"],"sources":["/Users/elvin/Documents/practica/test/src/pages/Posts.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport axios from \"axios\";\nimport { Card } from \"react-bootstrap\";\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/posts\")\n      .then((res) => setPosts(res.data));\n  }, []);\n\n  useEffect(() => {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => setUsers(res.data));\n  }, []);\n\n  const filteredList = posts.filter((post) => {\n    if (post.userId === users.id) {\n      console.log(\"hh\");\n      return [...posts, (post.userId = users.name)];\n    }\n  });\n  console.log(filteredList);\n\n  return (\n    <Layout>\n      <div>\n        {filteredList.map((post) => {\n          return (\n            <Card key={post.id}>\n              <h3>{post.title}</h3>\n              <h4>{post.userId}</h4>\n              <p>{post.body}</p>\n            </Card>\n          );\n        })}\n      </div>\n    </Layout>\n  );\n};\n\nexport default Posts;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtCD,SAAS,CAAC,MAAM;IACdG,KAAK,CACFU,GAAG,CAAC,4CAA4C,CAAC,CACjDC,IAAI,CAAEC,GAAG,IAAKL,QAAQ,CAACK,GAAG,CAACC,IAAI,CAAC,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAENhB,SAAS,CAAC,MAAM;IACdG,KAAK,CACFU,GAAG,CAAC,4CAA4C,CAAC,CACjDC,IAAI,CAAEC,GAAG,IAAKH,QAAQ,CAACG,GAAG,CAACC,IAAI,CAAC,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAGR,KAAK,CAACS,MAAM,CAAEC,IAAI,IAAK;IAC1C,IAAIA,IAAI,CAACC,MAAM,KAAKT,KAAK,CAACU,EAAE,EAAE;MAC5BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;MACjB,OAAO,CAAC,GAAGd,KAAK,EAAGU,IAAI,CAACC,MAAM,GAAGT,KAAK,CAACa,IAAI,CAAE;IAC/C;EACF,CAAC,CAAC;EACFF,OAAO,CAACC,GAAG,CAACN,YAAY,CAAC;EAEzB,oBACEX,OAAA,CAACJ,MAAM;IAAAuB,QAAA,eACLnB,OAAA;MAAAmB,QAAA,EACGR,YAAY,CAACS,GAAG,CAAEP,IAAI,IAAK;QAC1B,oBACEb,OAAA,CAACF,IAAI;UAAAqB,QAAA,gBACHnB,OAAA;YAAAmB,QAAA,EAAKN,IAAI,CAACQ;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrBzB,OAAA;YAAAmB,QAAA,EAAKN,IAAI,CAACC;UAAM;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtBzB,OAAA;YAAAmB,QAAA,EAAIN,IAAI,CAACa;UAAI;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAHTZ,IAAI,CAACE,EAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIZ,CAAC;MAEX,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAACvB,EAAA,CAtCID,KAAK;AAAA0B,EAAA,GAAL1B,KAAK;AAwCX,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}