{"ast":null,"code":"var _jsxFileName = \"/Users/elvin/Documents/practica/test/src/components/postComponents/AddNewPostForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { usePosts } from \"../context/postsContext\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddPostForm() {\n  _s();\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const {\n    userOptions,\n    addNewPost\n  } = usePosts();\n  const onSubmit = e => {\n    e.preventDefault();\n    const newPost = {\n      title,\n      body,\n      userId: parseInt(userId)\n    };\n    addNewPost(newPost);\n    setTitle(\"\");\n    setBody(\"\");\n    setUserId(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formTitle\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        ...register(\"name\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBody\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        ...register(\"body\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formUserId\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        ...register(\"userId\"),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select user...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), userOptions.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: user.value,\n          children: user.label\n        }, user.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPostForm, \"lrNv+Y34HhVgsnt0Qs6607sy0yc=\", false, function () {\n  return [useForm, usePosts];\n});\n_c = AddPostForm;\nvar _c;\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"names":["React","useState","usePosts","Form","Button","useForm","jsxDEV","_jsxDEV","AddPostForm","_s","register","handleSubmit","title","setTitle","body","setBody","userId","setUserId","userOptions","addNewPost","onSubmit","e","preventDefault","newPost","parseInt","children","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","as","value","map","user","label","variant","_c","$RefreshReg$"],"sources":["/Users/elvin/Documents/practica/test/src/components/postComponents/AddNewPostForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { usePosts } from \"../context/postsContext\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\n\nexport default function AddPostForm() {\n  const { register, handleSubmit } = useForm();\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const { userOptions, addNewPost } = usePosts();\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const newPost = { title, body, userId: parseInt(userId) };\n    addNewPost(newPost);\n    setTitle(\"\");\n    setBody(\"\");\n    setUserId(\"\");\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Form.Group controlId=\"formTitle\">\n        <Form.Label>Title</Form.Label>\n        <Form.Control type=\"text\" {...register(\"name\")} />\n      </Form.Group>\n\n      <Form.Group controlId=\"formBody\">\n        <Form.Label>Body</Form.Label>\n        <Form.Control type=\"text\" {...register(\"body\")} />\n      </Form.Group>\n\n      <Form.Group controlId=\"formUserId\">\n        <Form.Label>User</Form.Label>\n        <Form.Control as=\"select\" {...register(\"userId\")}>\n          <option value=\"\">Select user...</option>\n          {userOptions.map((user) => (\n            <option key={user.value} value={user.value}>\n              {user.label}\n            </option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}