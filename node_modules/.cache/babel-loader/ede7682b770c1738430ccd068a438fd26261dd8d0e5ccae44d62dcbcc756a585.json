{"ast":null,"code":"var _jsxFileName = \"/Users/elvin/Documents/practica/test/src/components/todosComponents/TodoAddForm.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { toast } from \"react-hot-toast\";\nimport { useNewTodo } from \"../../utilities/hooks/useNewTodo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TodoAddForm(_ref) {\n  _s();\n  let {\n    setShowModalForAddNewTodo\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm();\n  const {\n    addNewTodo\n  } = useNewTodo();\n  const onSubmit = data => {\n    addNewTodo(data);\n    reset();\n    setShowModalForAddNewTodo(false);\n    toast.success(\"todo created\");\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"d-flex flex-column gap-3\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formTitle\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        ...register(\"title\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"w-25\",\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoAddForm, \"yD0L/rVKJagKcHkBEhMqsDL5jIQ=\", false, function () {\n  return [useForm, useNewTodo];\n});\n_c = TodoAddForm;\nvar _c;\n$RefreshReg$(_c, \"TodoAddForm\");","map":{"version":3,"names":["React","Form","Button","useForm","toast","useNewTodo","jsxDEV","_jsxDEV","TodoAddForm","_ref","_s","setShowModalForAddNewTodo","register","handleSubmit","reset","addNewTodo","onSubmit","data","success","className","children","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","required","variant","_c","$RefreshReg$"],"sources":["/Users/elvin/Documents/practica/test/src/components/todosComponents/TodoAddForm.jsx"],"sourcesContent":["import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { toast } from \"react-hot-toast\";\nimport { useNewTodo } from \"../../utilities/hooks/useNewTodo\";\n\nexport function TodoAddForm({ setShowModalForAddNewTodo }) {\n  const { register, handleSubmit, reset } = useForm();\n  const { addNewTodo } = useNewTodo();\n  const onSubmit = (data) => {\n    addNewTodo(data);\n    reset();\n    setShowModalForAddNewTodo(false);\n    toast.success(\"todo created\");\n  };\n\n  return (\n    <Form\n      onSubmit={handleSubmit(onSubmit)}\n      className=\"d-flex flex-column gap-3\"\n    >\n      <Form.Group controlId=\"formTitle\">\n        <Form.Label>Title</Form.Label>\n        <Form.Control\n          type=\"text\"\n          {...register(\"title\", {\n            required: true,\n          })}\n        />\n      </Form.Group>\n      <Button className=\"w-25\" variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AAC9C,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,UAAU,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,OAAO,SAASC,WAAWA,CAAAC,IAAA,EAAgC;EAAAC,EAAA;EAAA,IAA/B;IAAEC;EAA0B,CAAC,GAAAF,IAAA;EACvD,MAAM;IAAEG,QAAQ;IAAEC,YAAY;IAAEC;EAAM,CAAC,GAAGX,OAAO,CAAC,CAAC;EACnD,MAAM;IAAEY;EAAW,CAAC,GAAGV,UAAU,CAAC,CAAC;EACnC,MAAMW,QAAQ,GAAIC,IAAI,IAAK;IACzBF,UAAU,CAACE,IAAI,CAAC;IAChBH,KAAK,CAAC,CAAC;IACPH,yBAAyB,CAAC,KAAK,CAAC;IAChCP,KAAK,CAACc,OAAO,CAAC,cAAc,CAAC;EAC/B,CAAC;EAED,oBACEX,OAAA,CAACN,IAAI;IACHe,QAAQ,EAAEH,YAAY,CAACG,QAAQ,CAAE;IACjCG,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBAEpCb,OAAA,CAACN,IAAI,CAACoB,KAAK;MAACC,SAAS,EAAC,WAAW;MAAAF,QAAA,gBAC/Bb,OAAA,CAACN,IAAI,CAACsB,KAAK;QAAAH,QAAA,EAAC;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAC9BpB,OAAA,CAACN,IAAI,CAAC2B,OAAO;QACXC,IAAI,EAAC,MAAM;QAAA,GACPjB,QAAQ,CAAC,OAAO,EAAE;UACpBkB,QAAQ,EAAE;QACZ,CAAC;MAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC,eACbpB,OAAA,CAACL,MAAM;MAACiB,SAAS,EAAC,MAAM;MAACY,OAAO,EAAC,SAAS;MAACF,IAAI,EAAC,QAAQ;MAAAT,QAAA,EAAC;IAEzD;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX;AAACjB,EAAA,CA7BeF,WAAW;EAAA,QACiBL,OAAO,EAC1BE,UAAU;AAAA;AAAA2B,EAAA,GAFnBxB,WAAW;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}