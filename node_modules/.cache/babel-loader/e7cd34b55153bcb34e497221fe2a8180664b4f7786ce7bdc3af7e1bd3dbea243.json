{"ast":null,"code":"var _jsxFileName = \"/Users/elvin/Documents/practica/test/src/utilities/context/favoritiesTodosContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoriteContext = /*#__PURE__*/createContext({});\nexport function FavoriteProviderTodos(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [favoriteTodos, setFavoriteTodos] = useState(JSON.parse(localStorage.getItem(\"favoriteTodos\")) || []);\n  const [showFavorites, setShowFavorites] = useState(false);\n  console.log(\"setShowFavorites\", setShowFavorites);\n  const handleAddMultiplyToFavoritiesTodos = ids => {\n    const currentfavoriteTodos = JSON.parse(localStorage.getItem(\"favoriteTodos\")) || [];\n    const newFavorities = [...new Set([...currentfavoriteTodos, ...ids])];\n    localStorage.setItem(\"favoriteTodos\", JSON.stringify(newFavorities));\n    setFavoriteTodos(newFavorities);\n    toast.success(\"todo added to Favorites!\");\n  };\n  const handleToggleAddfavoriteTodos = postId => {\n    const hasInList = favoriteTodos.includes(postId);\n    if (hasInList) {\n      const newFavoriteTodos = favoriteTodos.filter(id => id !== postId);\n      setFavoriteTodos(newFavoriteTodos);\n      localStorage.setItem(\"favoriteTodos\", JSON.stringify(newFavoriteTodos));\n      toast.success(\"todo deleted to Favorites!\");\n    } else {\n      const newFavoriteTodos = [...favoriteTodos, postId];\n      setFavoriteTodos(newFavoriteTodos);\n      localStorage.setItem(\"favoriteTodos\", JSON.stringify(newFavoriteTodos));\n      toast.success(\"todo added to Favorites!\");\n    }\n  };\n  const handleRemoveMultiplyToFavoritiesTodos = () => {\n    setFavoriteTodos([]);\n    localStorage.setItem(\"favoriteTodos\", JSON.stringify([]));\n  };\n  const value = {\n    setShowFavorites,\n    handleAddMultiplyToFavoritiesTodos,\n    handleToggleAddfavoriteTodos,\n    handleRemoveMultiplyToFavoritiesTodos,\n    favoriteTodos,\n    setFavoriteTodos,\n    showFavorites\n  };\n  return /*#__PURE__*/_jsxDEV(FavoriteContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(FavoriteProviderTodos, \"j8ZevP24rrJnpnuFOQpX5muV2jg=\");\n_c = FavoriteProviderTodos;\nexport const useFavoriteTodos = () => {\n  _s2();\n  return useContext(FavoriteContext);\n};\n_s2(useFavoriteTodos, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"FavoriteProviderTodos\");","map":{"version":3,"names":["createContext","useContext","useState","toast","jsxDEV","_jsxDEV","FavoriteContext","FavoriteProviderTodos","_ref","_s","children","favoriteTodos","setFavoriteTodos","JSON","parse","localStorage","getItem","showFavorites","setShowFavorites","console","log","handleAddMultiplyToFavoritiesTodos","ids","currentfavoriteTodos","newFavorities","Set","setItem","stringify","success","handleToggleAddfavoriteTodos","postId","hasInList","includes","newFavoriteTodos","filter","id","handleRemoveMultiplyToFavoritiesTodos","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useFavoriteTodos","_s2","$RefreshReg$"],"sources":["/Users/elvin/Documents/practica/test/src/utilities/context/favoritiesTodosContext.js"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\n\nconst FavoriteContext = createContext({});\n\nexport function FavoriteProviderTodos({ children }) {\n  const [favoriteTodos, setFavoriteTodos] = useState(\n    JSON.parse(localStorage.getItem(\"favoriteTodos\")) || []\n  );\n  const [showFavorites, setShowFavorites] = useState(false);\n  console.log(\"setShowFavorites\", setShowFavorites);\n  const handleAddMultiplyToFavoritiesTodos = (ids) => {\n    const currentfavoriteTodos =\n      JSON.parse(localStorage.getItem(\"favoriteTodos\")) || [];\n    const newFavorities = [...new Set([...currentfavoriteTodos, ...ids])];\n    localStorage.setItem(\"favoriteTodos\", JSON.stringify(newFavorities));\n    setFavoriteTodos(newFavorities);\n    toast.success(\"todo added to Favorites!\");\n  };\n\n  const handleToggleAddfavoriteTodos = (postId) => {\n    const hasInList = favoriteTodos.includes(postId);\n    if (hasInList) {\n      const newFavoriteTodos = favoriteTodos.filter((id) => id !== postId);\n      setFavoriteTodos(newFavoriteTodos);\n      localStorage.setItem(\"favoriteTodos\", JSON.stringify(newFavoriteTodos));\n      toast.success(\"todo deleted to Favorites!\");\n    } else {\n      const newFavoriteTodos = [...favoriteTodos, postId];\n      setFavoriteTodos(newFavoriteTodos);\n      localStorage.setItem(\"favoriteTodos\", JSON.stringify(newFavoriteTodos));\n      toast.success(\"todo added to Favorites!\");\n    }\n  };\n\n  const handleRemoveMultiplyToFavoritiesTodos = () => {\n    setFavoriteTodos([]);\n    localStorage.setItem(\"favoriteTodos\", JSON.stringify([]));\n  };\n\n  const value = {\n    setShowFavorites,\n    handleAddMultiplyToFavoritiesTodos,\n    handleToggleAddfavoriteTodos,\n    handleRemoveMultiplyToFavoritiesTodos,\n    favoriteTodos,\n    setFavoriteTodos,\n    showFavorites,\n  };\n\n  return (\n    <FavoriteContext.Provider value={value}>\n      {children}\n    </FavoriteContext.Provider>\n  );\n}\n\nexport const useFavoriteTodos = () => useContext(FavoriteContext);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}