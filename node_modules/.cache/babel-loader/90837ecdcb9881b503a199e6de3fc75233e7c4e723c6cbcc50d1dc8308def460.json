{"ast":null,"code":"import React from \"react\";\nimport { POST_API } from \"../const/const\";\nimport { toast } from \"react-hot-toast\";\nimport axios from \"axios\";\nexport default function useSaveForm(_ref) {\n  let {\n    setEditedPost,\n    setEditingPost,\n    editedPost,\n    editingPost,\n    posts,\n    setPosts\n  } = _ref;\n  const saveData = async () => {\n    try {\n      const response = await axios.put(`${POST_API}${editingPost}`, editedPost);\n      if (response.status === 200) {\n        const updatedPosts = posts.map(post => post.id === editingPost ? response.data : post);\n        setPosts(updatedPosts);\n        toast.success(\"post updated\");\n      } else {\n        toast.error(\"post update error\");\n      }\n    } catch (error) {\n      toast.error(\"post update error\");\n    }\n    setEditingPost(null);\n    setEditedPost({\n      title: \"\",\n      body: \"\",\n      userName: \"\"\n    });\n  };\n  return {\n    saveData\n  };\n}","map":{"version":3,"names":["React","POST_API","toast","axios","useSaveForm","_ref","setEditedPost","setEditingPost","editedPost","editingPost","posts","setPosts","saveData","response","put","status","updatedPosts","map","post","id","data","success","error","title","body","userName"],"sources":["/Users/elvin/Documents/practica/test/src/utilities/hooks/useSaveForm.js"],"sourcesContent":["import React from \"react\";\nimport { POST_API } from \"../const/const\";\nimport { toast } from \"react-hot-toast\";\nimport axios from \"axios\";\n\nexport default function useSaveForm({\n  setEditedPost,\n  setEditingPost,\n  editedPost,\n  editingPost,\n  posts,\n  setPosts,\n}) {\n  const saveData = async () => {\n    try {\n      const response = await axios.put(`${POST_API}${editingPost}`, editedPost);\n\n      if (response.status === 200) {\n        const updatedPosts = posts.map((post) =>\n          post.id === editingPost ? response.data : post\n        );\n        setPosts(updatedPosts);\n        toast.success(\"post updated\");\n      } else {\n        toast.error(\"post update error\");\n      }\n    } catch (error) {\n      toast.error(\"post update error\");\n    }\n\n    setEditingPost(null);\n    setEditedPost({ title: \"\", body: \"\", userName: \"\" });\n  };\n  return { saveData };\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,KAAK,QAAQ,iBAAiB;AACvC,OAAOC,KAAK,MAAM,OAAO;AAEzB,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAOhC;EAAA,IAPiC;IAClCC,aAAa;IACbC,cAAc;IACdC,UAAU;IACVC,WAAW;IACXC,KAAK;IACLC;EACF,CAAC,GAAAN,IAAA;EACC,MAAMO,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAE,GAAEb,QAAS,GAAEQ,WAAY,EAAC,EAAED,UAAU,CAAC;MAEzE,IAAIK,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAMC,YAAY,GAAGN,KAAK,CAACO,GAAG,CAAEC,IAAI,IAClCA,IAAI,CAACC,EAAE,KAAKV,WAAW,GAAGI,QAAQ,CAACO,IAAI,GAAGF,IAC5C,CAAC;QACDP,QAAQ,CAACK,YAAY,CAAC;QACtBd,KAAK,CAACmB,OAAO,CAAC,cAAc,CAAC;MAC/B,CAAC,MAAM;QACLnB,KAAK,CAACoB,KAAK,CAAC,mBAAmB,CAAC;MAClC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdpB,KAAK,CAACoB,KAAK,CAAC,mBAAmB,CAAC;IAClC;IAEAf,cAAc,CAAC,IAAI,CAAC;IACpBD,aAAa,CAAC;MAAEiB,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC,CAAC;EACtD,CAAC;EACD,OAAO;IAAEb;EAAS,CAAC;AACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}