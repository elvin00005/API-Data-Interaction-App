{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { toast } from \"react-hot-toast\";\nimport { usePosts } from \"../context/postsContext\";\nimport { useFavoritePosts } from \"../context/favoritiesPostsContext\";\nimport { POST_API } from \"../const/const\";\nexport const useDeletePostsFromSelect = setSelectedPosts => {\n  _s();\n  const {\n    setPosts\n  } = usePosts();\n  const {\n    setFavoritePosts\n  } = useFavoritePosts();\n  const deletePosts = async selectedPosts => {\n    const postsToDelete = [...selectedPosts];\n    const deleteRequests = postsToDelete.map(postId => axios.delete(`${POST_API}/${postId}`));\n    try {\n      await Promise.all(deleteRequests);\n      setPosts(prevPosts => {\n        const filtered = prevPosts.filter(post => !postsToDelete.includes(post.id));\n        return filtered;\n      });\n      setFavoritePosts(prevFavoritePosts => {\n        const newFavoritePosts = prevFavoritePosts.filter(postId => !postsToDelete.includes(postId));\n        localStorage.setItem(\"favoritePosts\", JSON.stringify(newFavoritePosts));\n        return newFavoritePosts;\n      });\n      setSelectedPosts(prevSelectedPosts => prevSelectedPosts.filter(postId => !postsToDelete.includes(postId)));\n      toast.success(\"Selected posts removed\");\n    } catch (error) {\n      toast.error(\"Failed to delete some posts\");\n    }\n  };\n  return {\n    deletePosts\n  };\n};\n_s(useDeletePostsFromSelect, \"vk2DTHsgq6Xv4n2CE8N57/8zvPk=\", false, function () {\n  return [usePosts, useFavoritePosts];\n});","map":{"version":3,"names":["axios","toast","usePosts","useFavoritePosts","POST_API","useDeletePostsFromSelect","setSelectedPosts","_s","setPosts","setFavoritePosts","deletePosts","selectedPosts","postsToDelete","deleteRequests","map","postId","delete","Promise","all","prevPosts","filtered","filter","post","includes","id","prevFavoritePosts","newFavoritePosts","localStorage","setItem","JSON","stringify","prevSelectedPosts","success","error"],"sources":["/Users/elvin/Documents/practica/test/src/utilities/hooks/useDeletePostsFromSelect.js"],"sourcesContent":["import axios from \"axios\";\nimport { toast } from \"react-hot-toast\";\nimport { usePosts } from \"../context/postsContext\";\nimport { useFavoritePosts } from \"../context/favoritiesPostsContext\";\nimport { POST_API } from \"../const/const\";\n\nexport const useDeletePostsFromSelect = (setSelectedPosts) => {\n  const { setPosts } = usePosts();\n  const { setFavoritePosts } = useFavoritePosts();\n  const deletePosts = async (selectedPosts) => {\n    const postsToDelete = [...selectedPosts];\n\n    const deleteRequests = postsToDelete.map((postId) =>\n      axios.delete(`${POST_API}/${postId}`)\n    );\n    try {\n      await Promise.all(deleteRequests);\n\n      setPosts((prevPosts) => {\n        const filtered = prevPosts.filter(\n          (post) => !postsToDelete.includes(post.id)\n        );\n        return filtered;\n      });\n\n      setFavoritePosts((prevFavoritePosts) => {\n        const newFavoritePosts = prevFavoritePosts.filter(\n          (postId) => !postsToDelete.includes(postId)\n        );\n        localStorage.setItem(\"favoritePosts\", JSON.stringify(newFavoritePosts));\n        return newFavoritePosts;\n      });\n\n      setSelectedPosts((prevSelectedPosts) =>\n        prevSelectedPosts.filter((postId) => !postsToDelete.includes(postId))\n      );\n\n      toast.success(\"Selected posts removed\");\n    } catch (error) {\n      toast.error(\"Failed to delete some posts\");\n    }\n  };\n\n  return { deletePosts };\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,QAAQ,QAAQ,gBAAgB;AAEzC,OAAO,MAAMC,wBAAwB,GAAIC,gBAAgB,IAAK;EAAAC,EAAA;EAC5D,MAAM;IAAEC;EAAS,CAAC,GAAGN,QAAQ,CAAC,CAAC;EAC/B,MAAM;IAAEO;EAAiB,CAAC,GAAGN,gBAAgB,CAAC,CAAC;EAC/C,MAAMO,WAAW,GAAG,MAAOC,aAAa,IAAK;IAC3C,MAAMC,aAAa,GAAG,CAAC,GAAGD,aAAa,CAAC;IAExC,MAAME,cAAc,GAAGD,aAAa,CAACE,GAAG,CAAEC,MAAM,IAC9Cf,KAAK,CAACgB,MAAM,CAAE,GAAEZ,QAAS,IAAGW,MAAO,EAAC,CACtC,CAAC;IACD,IAAI;MACF,MAAME,OAAO,CAACC,GAAG,CAACL,cAAc,CAAC;MAEjCL,QAAQ,CAAEW,SAAS,IAAK;QACtB,MAAMC,QAAQ,GAAGD,SAAS,CAACE,MAAM,CAC9BC,IAAI,IAAK,CAACV,aAAa,CAACW,QAAQ,CAACD,IAAI,CAACE,EAAE,CAC3C,CAAC;QACD,OAAOJ,QAAQ;MACjB,CAAC,CAAC;MAEFX,gBAAgB,CAAEgB,iBAAiB,IAAK;QACtC,MAAMC,gBAAgB,GAAGD,iBAAiB,CAACJ,MAAM,CAC9CN,MAAM,IAAK,CAACH,aAAa,CAACW,QAAQ,CAACR,MAAM,CAC5C,CAAC;QACDY,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEC,IAAI,CAACC,SAAS,CAACJ,gBAAgB,CAAC,CAAC;QACvE,OAAOA,gBAAgB;MACzB,CAAC,CAAC;MAEFpB,gBAAgB,CAAEyB,iBAAiB,IACjCA,iBAAiB,CAACV,MAAM,CAAEN,MAAM,IAAK,CAACH,aAAa,CAACW,QAAQ,CAACR,MAAM,CAAC,CACtE,CAAC;MAEDd,KAAK,CAAC+B,OAAO,CAAC,wBAAwB,CAAC;IACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdhC,KAAK,CAACgC,KAAK,CAAC,6BAA6B,CAAC;IAC5C;EACF,CAAC;EAED,OAAO;IAAEvB;EAAY,CAAC;AACxB,CAAC;AAACH,EAAA,CAtCWF,wBAAwB;EAAA,QACdH,QAAQ,EACAC,gBAAgB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}