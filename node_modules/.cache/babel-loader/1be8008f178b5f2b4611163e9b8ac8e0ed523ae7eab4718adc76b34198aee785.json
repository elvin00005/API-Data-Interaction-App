{"ast":null,"code":"import { POST_API } from \"../const/const\";\nimport { toast } from \"react-hot-toast\";\nimport axios from \"axios\";\nexport default function useSaveForm(_ref) {\n  let {\n    setEditedPost,\n    editedPost,\n    posts,\n    setPosts\n  } = _ref;\n  const saveData = async id => {\n    console.log(id);\n    console.log(\"s\");\n    try {\n      const response = await axios.put(`${POST_API}/${id}`, editedPost);\n      if (response.status === 200) {\n        const updatedPosts = posts.map(post => post.id === id ? response.data : post);\n        setPosts(updatedPosts);\n        toast.success(\"post updated\");\n      } else {\n        toast.error(\"post update error\");\n      }\n    } catch (error) {\n      toast.error(\"post update error\");\n    }\n    setEditedPost({\n      title: \"\",\n      body: \"\",\n      userName: \"\"\n    });\n  };\n  return {\n    saveData\n  };\n}","map":{"version":3,"names":["POST_API","toast","axios","useSaveForm","_ref","setEditedPost","editedPost","posts","setPosts","saveData","id","console","log","response","put","status","updatedPosts","map","post","data","success","error","title","body","userName"],"sources":["/Users/elvin/Documents/practica/test/src/utilities/hooks/useSaveForm.js"],"sourcesContent":["import { POST_API } from \"../const/const\";\nimport { toast } from \"react-hot-toast\";\nimport axios from \"axios\";\n\nexport default function useSaveForm({\n  setEditedPost,\n\n  editedPost,\n\n  posts,\n  setPosts,\n}) {\n  const saveData = async (id) => {\n    console.log(id);\n    console.log(\"s\");\n    try {\n      const response = await axios.put(`${POST_API}/${id}`, editedPost);\n\n      if (response.status === 200) {\n        const updatedPosts = posts.map((post) =>\n          post.id === id ? response.data : post\n        );\n        setPosts(updatedPosts);\n        toast.success(\"post updated\");\n      } else {\n        toast.error(\"post update error\");\n      }\n    } catch (error) {\n      toast.error(\"post update error\");\n    }\n\n    setEditedPost({ title: \"\", body: \"\", userName: \"\" });\n  };\n  return { saveData };\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,KAAK,QAAQ,iBAAiB;AACvC,OAAOC,KAAK,MAAM,OAAO;AAEzB,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAOhC;EAAA,IAPiC;IAClCC,aAAa;IAEbC,UAAU;IAEVC,KAAK;IACLC;EACF,CAAC,GAAAJ,IAAA;EACC,MAAMK,QAAQ,GAAG,MAAOC,EAAE,IAAK;IAC7BC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;IACfC,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAChB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,GAAEd,QAAS,IAAGU,EAAG,EAAC,EAAEJ,UAAU,CAAC;MAEjE,IAAIO,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAMC,YAAY,GAAGT,KAAK,CAACU,GAAG,CAAEC,IAAI,IAClCA,IAAI,CAACR,EAAE,KAAKA,EAAE,GAAGG,QAAQ,CAACM,IAAI,GAAGD,IACnC,CAAC;QACDV,QAAQ,CAACQ,YAAY,CAAC;QACtBf,KAAK,CAACmB,OAAO,CAAC,cAAc,CAAC;MAC/B,CAAC,MAAM;QACLnB,KAAK,CAACoB,KAAK,CAAC,mBAAmB,CAAC;MAClC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdpB,KAAK,CAACoB,KAAK,CAAC,mBAAmB,CAAC;IAClC;IAEAhB,aAAa,CAAC;MAAEiB,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC,CAAC;EACtD,CAAC;EACD,OAAO;IAAEf;EAAS,CAAC;AACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}