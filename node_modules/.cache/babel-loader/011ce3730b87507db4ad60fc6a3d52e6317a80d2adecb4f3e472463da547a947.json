{"ast":null,"code":"var _jsxFileName = \"/Users/elvin/Documents/practica/test/src/components/postComponents/AddNewPostForm.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useFilterPosts } from \"../../utilities/hooks/useFilterPosts\";\nimport { toast } from \"react-hot-toast\";\nimport { useNewPost } from \"../../utilities/hooks/useNewPost\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddPostForm(_ref) {\n  _s();\n  let {\n    setShowModalForAddNewPost\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm();\n  const {\n    userOptions\n  } = useFilterPosts();\n  const {\n    addNewPost\n  } = useNewPost();\n  const onSubmit = data => {\n    const selectedUser = userOptions.find(user => user.value === data.userId);\n    const newPost = {\n      title: data.title,\n      body: data.body,\n      userId: data.userId\n    };\n    addNewPost(newPost, selectedUser);\n    reset();\n    setShowModalForAddNewPost(false);\n    toast.success(\"post created\");\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"d-flex flex-column gap-3\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formTitle\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        ...register(\"title\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBody\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        ...register(\"body\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formUserId\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        ...register(\"userId\", {\n          required: true\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select user...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), userOptions === null || userOptions === void 0 ? void 0 : userOptions.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: user.value,\n          children: user.label\n        }, user.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"w-25\",\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPostForm, \"VJi85bYZj4d+FCMxn+WbIAYHy8A=\", false, function () {\n  return [useForm, useFilterPosts, useNewPost];\n});\n_c = AddPostForm;\nvar _c;\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"names":["React","Form","Button","useForm","useFilterPosts","toast","useNewPost","jsxDEV","_jsxDEV","AddPostForm","_ref","_s","setShowModalForAddNewPost","register","handleSubmit","reset","userOptions","addNewPost","onSubmit","data","selectedUser","find","user","value","userId","newPost","title","body","success","className","children","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","required","as","map","label","variant","_c","$RefreshReg$"],"sources":["/Users/elvin/Documents/practica/test/src/components/postComponents/AddNewPostForm.jsx"],"sourcesContent":["import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\n\nimport { useFilterPosts } from \"../../utilities/hooks/useFilterPosts\";\nimport { toast } from \"react-hot-toast\";\nimport { useNewPost } from \"../../utilities/hooks/useNewPost\";\n\nexport default function AddPostForm({ setShowModalForAddNewPost }) {\n  const { register, handleSubmit, reset } = useForm();\n  const { userOptions } = useFilterPosts();\n  const { addNewPost } = useNewPost();\n  const onSubmit = (data) => {\n    const selectedUser = userOptions.find((user) => user.value === data.userId);\n    const newPost = {\n      title: data.title,\n      body: data.body,\n      userId: data.userId,\n    };\n    addNewPost(newPost, selectedUser);\n    reset();\n    setShowModalForAddNewPost(false);\n    toast.success(\"post created\");\n  };\n\n  return (\n    <Form\n      onSubmit={handleSubmit(onSubmit)}\n      className=\"d-flex flex-column gap-3\"\n    >\n      <Form.Group controlId=\"formTitle\">\n        <Form.Label>Title</Form.Label>\n        <Form.Control\n          type=\"text\"\n          {...register(\"title\", {\n            required: true,\n          })}\n        />\n      </Form.Group>\n      <Form.Group controlId=\"formBody\">\n        <Form.Label>Body</Form.Label>\n        <Form.Control type=\"text\" {...register(\"body\", { required: true })} />\n      </Form.Group>\n      <Form.Group controlId=\"formUserId\">\n        <Form.Label>User</Form.Label>\n        <Form.Control as=\"select\" {...register(\"userId\", { required: true })}>\n          <option value=\"\">Select user...</option>\n          {userOptions?.map((user) => (\n            <option key={user.value} value={user.value}>\n              {user.label}\n            </option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n      <Button className=\"w-25\" variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}