{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo, useState } from \"react\";\nimport { useFavoriteTodos } from \"../context/favoritiesTodosContext\";\nimport { useTodos } from \"../context/todosContext\";\nimport { set } from \"lodash\";\nexport function useFilterTodos() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortCompleted, setSortCompleted] = useState(false);\n  const [completed, setCompleted] = useState([]);\n  const {\n    favoriteTodos,\n    showFavorites,\n    setShowFavorites\n  } = useFavoriteTodos();\n  const {\n    todos\n  } = useTodos();\n  const sortedTodos = useMemo(() => {\n    const completedTodos = todos.filter(todo => todo.completed);\n    const uncompletedTodos = todos.filter(todo => !todo.completed);\n    setCompleted(completedTodos);\n    return [...uncompletedTodos, ...completedTodos];\n  }, [todos]);\n  const filteredTodos = useMemo(() => sortedTodos.filter(todo => {\n    const titleMatch = todo.title.toLowerCase().includes(searchTerm.toLowerCase());\n    const favoriteMatch = showFavorites ? favoriteTodos.includes(todo.id) : true;\n    return titleMatch && favoriteMatch;\n  }), [sortedTodos, searchTerm, favoriteTodos, showFavorites]);\n  const toggleSortCompleted = () => {\n    setSortCompleted(!sortCompleted);\n  };\n  return {\n    searchTerm,\n    setSearchTerm,\n    setShowFavorites,\n    filteredTodos,\n    toggleSortCompleted,\n    sortCompleted,\n    toggleSortCompleted,\n    completed\n  };\n}\n_s(useFilterTodos, \"xrrwpXnVGWOCf460L6zk/Y6Y95E=\", false, function () {\n  return [useFavoriteTodos, useTodos];\n});","map":{"version":3,"names":["useMemo","useState","useFavoriteTodos","useTodos","set","useFilterTodos","_s","searchTerm","setSearchTerm","sortCompleted","setSortCompleted","completed","setCompleted","favoriteTodos","showFavorites","setShowFavorites","todos","sortedTodos","completedTodos","filter","todo","uncompletedTodos","filteredTodos","titleMatch","title","toLowerCase","includes","favoriteMatch","id","toggleSortCompleted"],"sources":["/Users/elvin/Documents/practica/test/src/utilities/hooks/useFilterTodos.js"],"sourcesContent":["import { useMemo, useState } from \"react\";\nimport { useFavoriteTodos } from \"../context/favoritiesTodosContext\";\nimport { useTodos } from \"../context/todosContext\";\nimport { set } from \"lodash\";\n\nexport function useFilterTodos() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortCompleted, setSortCompleted] = useState(false);\n  const [completed, setCompleted] = useState([]);\n  const { favoriteTodos, showFavorites, setShowFavorites } = useFavoriteTodos();\n  const { todos } = useTodos();\n\n  const sortedTodos = useMemo(() => {\n    const completedTodos = todos.filter((todo) => todo.completed);\n    const uncompletedTodos = todos.filter((todo) => !todo.completed);\n    setCompleted(completedTodos);\n    return [...uncompletedTodos, ...completedTodos];\n  }, [todos]);\n\n  const filteredTodos = useMemo(\n    () =>\n      sortedTodos.filter((todo) => {\n        const titleMatch = todo.title\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase());\n\n        const favoriteMatch = showFavorites\n          ? favoriteTodos.includes(todo.id)\n          : true;\n        return titleMatch && favoriteMatch;\n      }),\n    [sortedTodos, searchTerm, favoriteTodos, showFavorites]\n  );\n  const toggleSortCompleted = () => {\n    setSortCompleted(!sortCompleted);\n  };\n\n  return {\n    searchTerm,\n    setSearchTerm,\n    setShowFavorites,\n    filteredTodos,\n    toggleSortCompleted,\n    sortCompleted,\n    toggleSortCompleted,\n    completed,\n  };\n}\n"],"mappings":";AAAA,SAASA,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACzC,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,GAAG,QAAQ,QAAQ;AAE5B,OAAO,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM;IAAEY,aAAa;IAAEC,aAAa;IAAEC;EAAiB,CAAC,GAAGb,gBAAgB,CAAC,CAAC;EAC7E,MAAM;IAAEc;EAAM,CAAC,GAAGb,QAAQ,CAAC,CAAC;EAE5B,MAAMc,WAAW,GAAGjB,OAAO,CAAC,MAAM;IAChC,MAAMkB,cAAc,GAAGF,KAAK,CAACG,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACT,SAAS,CAAC;IAC7D,MAAMU,gBAAgB,GAAGL,KAAK,CAACG,MAAM,CAAEC,IAAI,IAAK,CAACA,IAAI,CAACT,SAAS,CAAC;IAChEC,YAAY,CAACM,cAAc,CAAC;IAC5B,OAAO,CAAC,GAAGG,gBAAgB,EAAE,GAAGH,cAAc,CAAC;EACjD,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC;EAEX,MAAMM,aAAa,GAAGtB,OAAO,CAC3B,MACEiB,WAAW,CAACE,MAAM,CAAEC,IAAI,IAAK;IAC3B,MAAMG,UAAU,GAAGH,IAAI,CAACI,KAAK,CAC1BC,WAAW,CAAC,CAAC,CACbC,QAAQ,CAACnB,UAAU,CAACkB,WAAW,CAAC,CAAC,CAAC;IAErC,MAAME,aAAa,GAAGb,aAAa,GAC/BD,aAAa,CAACa,QAAQ,CAACN,IAAI,CAACQ,EAAE,CAAC,GAC/B,IAAI;IACR,OAAOL,UAAU,IAAII,aAAa;EACpC,CAAC,CAAC,EACJ,CAACV,WAAW,EAAEV,UAAU,EAAEM,aAAa,EAAEC,aAAa,CACxD,CAAC;EACD,MAAMe,mBAAmB,GAAGA,CAAA,KAAM;IAChCnB,gBAAgB,CAAC,CAACD,aAAa,CAAC;EAClC,CAAC;EAED,OAAO;IACLF,UAAU;IACVC,aAAa;IACbO,gBAAgB;IAChBO,aAAa;IACbO,mBAAmB;IACnBpB,aAAa;IACboB,mBAAmB;IACnBlB;EACF,CAAC;AACH;AAACL,EAAA,CA1CeD,cAAc;EAAA,QAI+BH,gBAAgB,EACzDC,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}