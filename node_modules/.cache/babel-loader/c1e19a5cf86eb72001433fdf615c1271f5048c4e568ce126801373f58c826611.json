{"ast":null,"code":"var _s = $RefreshSig$();\nimport { POST_API } from \"../const/const\";\nimport { toast } from \"react-hot-toast\";\nimport axios from \"axios\";\nimport { usePosts } from \"../context/postsContext\";\nexport default function useSaveForm(_ref) {\n  _s();\n  let {\n    setEditedPost,\n    editedPost,\n    setPosts\n  } = _ref;\n  const {\n    posts\n  } = usePosts();\n  console.log(posts);\n  const saveData = async id => {\n    try {\n      const response = await axios.put(`${POST_API}/${id}`, editedPost);\n      if (response.status === 200) {\n        const updatedPosts = posts.map(post => post.id === id ? Object.assign({}, post, {\n          ...response.data,\n          user: {\n            ...post.user,\n            name: response.data.userName\n          }\n        }) : post);\n        setPosts(updatedPosts);\n        toast.success(\"post updated\");\n        const updatedEditedPost = Object.assign({}, editedPost, {\n          userName: response.data.userName\n        });\n        console.log(\"updatedPosts\", updatedPosts);\n        setEditedPost(updatedEditedPost);\n      } else {\n        toast.error(\"post update error\");\n      }\n    } catch (error) {\n      toast.error(\"post update error\");\n    }\n  };\n  return {\n    saveData\n  };\n}\n_s(useSaveForm, \"KHy6C+H3NEsB6fvEUGnuN5RlPuE=\", false, function () {\n  return [usePosts];\n});","map":{"version":3,"names":["POST_API","toast","axios","usePosts","useSaveForm","_ref","_s","setEditedPost","editedPost","setPosts","posts","console","log","saveData","id","response","put","status","updatedPosts","map","post","Object","assign","data","user","name","userName","success","updatedEditedPost","error"],"sources":["/Users/elvin/Documents/practica/test/src/utilities/hooks/useSaveForm.js"],"sourcesContent":["import { POST_API } from \"../const/const\";\nimport { toast } from \"react-hot-toast\";\nimport axios from \"axios\";\n\nimport { usePosts } from \"../context/postsContext\";\n\nexport default function useSaveForm({ setEditedPost, editedPost, setPosts }) {\n  const { posts } = usePosts();\n  console.log(posts);\n  const saveData = async (id) => {\n    try {\n      const response = await axios.put(`${POST_API}/${id}`, editedPost);\n      if (response.status === 200) {\n        const updatedPosts = posts.map((post) =>\n          post.id === id\n            ? Object.assign({}, post, {\n                ...response.data,\n                user: { ...post.user, name: response.data.userName },\n              })\n            : post\n        );\n        setPosts(updatedPosts);\n        toast.success(\"post updated\");\n        const updatedEditedPost = Object.assign({}, editedPost, {\n          userName: response.data.userName,\n        });\n        console.log(\"updatedPosts\", updatedPosts);\n        setEditedPost(updatedEditedPost);\n      } else {\n        toast.error(\"post update error\");\n      }\n    } catch (error) {\n      toast.error(\"post update error\");\n    }\n  };\n\n  return { saveData };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,KAAK,QAAQ,iBAAiB;AACvC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,QAAQ,QAAQ,yBAAyB;AAElD,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAA0C;EAAAC,EAAA;EAAA,IAAzC;IAAEC,aAAa;IAAEC,UAAU;IAAEC;EAAS,CAAC,GAAAJ,IAAA;EACzE,MAAM;IAAEK;EAAM,CAAC,GAAGP,QAAQ,CAAC,CAAC;EAC5BQ,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,MAAMG,QAAQ,GAAG,MAAOC,EAAE,IAAK;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,GAAEhB,QAAS,IAAGc,EAAG,EAAC,EAAEN,UAAU,CAAC;MACjE,IAAIO,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAMC,YAAY,GAAGR,KAAK,CAACS,GAAG,CAAEC,IAAI,IAClCA,IAAI,CAACN,EAAE,KAAKA,EAAE,GACVO,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEF,IAAI,EAAE;UACtB,GAAGL,QAAQ,CAACQ,IAAI;UAChBC,IAAI,EAAE;YAAE,GAAGJ,IAAI,CAACI,IAAI;YAAEC,IAAI,EAAEV,QAAQ,CAACQ,IAAI,CAACG;UAAS;QACrD,CAAC,CAAC,GACFN,IACN,CAAC;QACDX,QAAQ,CAACS,YAAY,CAAC;QACtBjB,KAAK,CAAC0B,OAAO,CAAC,cAAc,CAAC;QAC7B,MAAMC,iBAAiB,GAAGP,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEd,UAAU,EAAE;UACtDkB,QAAQ,EAAEX,QAAQ,CAACQ,IAAI,CAACG;QAC1B,CAAC,CAAC;QACFf,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEM,YAAY,CAAC;QACzCX,aAAa,CAACqB,iBAAiB,CAAC;MAClC,CAAC,MAAM;QACL3B,KAAK,CAAC4B,KAAK,CAAC,mBAAmB,CAAC;MAClC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACd5B,KAAK,CAAC4B,KAAK,CAAC,mBAAmB,CAAC;IAClC;EACF,CAAC;EAED,OAAO;IAAEhB;EAAS,CAAC;AACrB;AAACP,EAAA,CA/BuBF,WAAW;EAAA,QACfD,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}