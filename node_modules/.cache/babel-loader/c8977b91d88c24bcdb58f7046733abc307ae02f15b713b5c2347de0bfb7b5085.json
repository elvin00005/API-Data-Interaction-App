{"ast":null,"code":"var _jsxFileName = \"/Users/elvin/Documents/practica/test/src/pages/AlbumPhotos.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Layout } from \"../components/layout/Layout\";\nimport { useAlbums } from \"../utilities/context/albumsContext\";\nimport { useParams } from \"react-router-dom\";\nimport { Card, ListGroup } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AlbumPhotos = () => {\n  _s();\n  const {\n    albumId\n  } = useParams();\n  const {\n    albums\n  } = useAlbums();\n  const photos = albums.filter(album => {\n    if (album.id === +albumId) {\n      return album;\n    }\n  });\n  console.log(\"!!!!!!!\", photos);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Album Photos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: photos.map(photo => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: photo.photos.thumbnailUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: photo.photos.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(AlbumPhotos, \"QN44WD3YSwTuCLgesSkUvrWkTgg=\", false, function () {\n  return [useParams, useAlbums];\n});\n_c = AlbumPhotos;\nexport default AlbumPhotos;\nvar _c;\n$RefreshReg$(_c, \"AlbumPhotos\");","map":{"version":3,"names":["React","Layout","useAlbums","useParams","Card","ListGroup","jsxDEV","_jsxDEV","Fragment","_Fragment","AlbumPhotos","_s","albumId","albums","photos","filter","album","id","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","photo","Img","variant","src","thumbnailUrl","Body","Title","title","_c","$RefreshReg$"],"sources":["/Users/elvin/Documents/practica/test/src/pages/AlbumPhotos.jsx"],"sourcesContent":["import React from \"react\";\n\nimport { Layout } from \"../components/layout/Layout\";\nimport { useAlbums } from \"../utilities/context/albumsContext\";\nimport { useParams } from \"react-router-dom\";\nimport { Card, ListGroup } from \"react-bootstrap\";\n\nconst AlbumPhotos = () => {\n  const { albumId } = useParams();\n  const { albums } = useAlbums();\n  const photos = albums.filter((album) => {\n    if (album.id === +albumId) {\n      return album;\n    }\n  });\n\n  console.log(\"!!!!!!!\", photos);\n  return (\n    <Layout>\n      <h2 className=\"text-center\">Album Photos</h2>\n      <div>\n        {photos.map((photo) => {\n          return (\n            <>\n              <Card.Img variant=\"top\" src={photo.photos.thumbnailUrl} />\n              <Card.Body>\n                <Card.Title>{photo.photos.title}</Card.Title>\n              </Card.Body>\n            </>\n          );\n        })}\n      </div>\n    </Layout>\n  );\n};\n\nexport default AlbumPhotos;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,MAAM,QAAQ,6BAA6B;AACpD,SAASC,SAAS,QAAQ,oCAAoC;AAC9D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,IAAI,EAAEC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAQ,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC/B,MAAM;IAAEU;EAAO,CAAC,GAAGX,SAAS,CAAC,CAAC;EAC9B,MAAMY,MAAM,GAAGD,MAAM,CAACE,MAAM,CAAEC,KAAK,IAAK;IACtC,IAAIA,KAAK,CAACC,EAAE,KAAK,CAACL,OAAO,EAAE;MACzB,OAAOI,KAAK;IACd;EACF,CAAC,CAAC;EAEFE,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEL,MAAM,CAAC;EAC9B,oBACEP,OAAA,CAACN,MAAM;IAAAmB,QAAA,gBACLb,OAAA;MAAIc,SAAS,EAAC,aAAa;MAAAD,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7ClB,OAAA;MAAAa,QAAA,EACGN,MAAM,CAACY,GAAG,CAAEC,KAAK,IAAK;QACrB,oBACEpB,OAAA,CAAAE,SAAA;UAAAW,QAAA,gBACEb,OAAA,CAACH,IAAI,CAACwB,GAAG;YAACC,OAAO,EAAC,KAAK;YAACC,GAAG,EAAEH,KAAK,CAACb,MAAM,CAACiB;UAAa;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC1DlB,OAAA,CAACH,IAAI,CAAC4B,IAAI;YAAAZ,QAAA,eACRb,OAAA,CAACH,IAAI,CAAC6B,KAAK;cAAAb,QAAA,EAAEO,KAAK,CAACb,MAAM,CAACoB;YAAK;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC;QAAA,eACZ,CAAC;MAEP,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAACd,EAAA,CA3BID,WAAW;EAAA,QACKP,SAAS,EACVD,SAAS;AAAA;AAAAiC,EAAA,GAFxBzB,WAAW;AA6BjB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}