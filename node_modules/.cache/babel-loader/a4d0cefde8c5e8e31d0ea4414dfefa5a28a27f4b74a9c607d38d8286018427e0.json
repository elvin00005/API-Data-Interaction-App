{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useFavoriteTodos } from \"../context/favoritiesTodosContext\";\nimport { useTodos } from \"../context/todosContext\";\nexport function useFilterTodos() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const {\n    favoriteTodos,\n    showFavorites,\n    setShowFavorites\n  } = useFavoriteTodos();\n  const {\n    todos\n  } = useTodos();\n  const [sortedTodos, setSortedTodos] = useState([]);\n  useEffect(() => {\n    const sorted = todos.slice().sort((a, b) => {\n      if (a.completed && !b.completed) {\n        return 1; // перемещаем выполненную задачу вниз\n      } else if (!a.completed && b.completed) {\n        return -1; // перемещаем невыполненную задачу вверх\n      } else {\n        return 0; // сохраняем текущий порядок для задач с одинаковым статусом\n      }\n    });\n\n    setSortedTodos(sorted);\n  }, [todos]);\n  const filteredTodos = useMemo(() => sortedTodos.filter(todo => {\n    const titleMatch = todo.title.toLowerCase().includes(searchTerm.toLowerCase());\n    const favoriteMatch = showFavorites ? favoriteTodos.includes(todo.id) : true;\n    return titleMatch && favoriteMatch;\n  }), [sortedTodos, searchTerm, selectedUsers, favoriteTodos, showFavorites]);\n  return {\n    userOptions,\n    searchTerm,\n    selectedUsers,\n    setSearchTerm,\n    setSelectedUsers,\n    setShowFavorites,\n    filteredTodos\n  };\n}\n_s(useFilterTodos, \"ajLiVYBpzyOIfOgz1q0lM3tSuVs=\", false, function () {\n  return [useFavoriteTodos, useTodos];\n});","map":{"version":3,"names":["useEffect","useMemo","useState","useFavoriteTodos","useTodos","useFilterTodos","_s","searchTerm","setSearchTerm","selectedUsers","setSelectedUsers","favoriteTodos","showFavorites","setShowFavorites","todos","sortedTodos","setSortedTodos","sorted","slice","sort","a","b","completed","filteredTodos","filter","todo","titleMatch","title","toLowerCase","includes","favoriteMatch","id","userOptions"],"sources":["/Users/elvin/Documents/practica/test/src/utilities/hooks/useFilterTodos.js"],"sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\nimport { useFavoriteTodos } from \"../context/favoritiesTodosContext\";\nimport { useTodos } from \"../context/todosContext\";\n\nexport function useFilterTodos() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const { favoriteTodos, showFavorites, setShowFavorites } = useFavoriteTodos();\n  const { todos } = useTodos();\n\n  const [sortedTodos, setSortedTodos] = useState([]);\n\n  useEffect(() => {\n    const sorted = todos.slice().sort((a, b) => {\n      if (a.completed && !b.completed) {\n        return 1; // перемещаем выполненную задачу вниз\n      } else if (!a.completed && b.completed) {\n        return -1; // перемещаем невыполненную задачу вверх\n      } else {\n        return 0; // сохраняем текущий порядок для задач с одинаковым статусом\n      }\n    });\n    setSortedTodos(sorted);\n  }, [todos]);\n\n  const filteredTodos = useMemo(\n    () =>\n      sortedTodos.filter((todo) => {\n        const titleMatch = todo.title\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase());\n\n        const favoriteMatch = showFavorites\n          ? favoriteTodos.includes(todo.id)\n          : true;\n        return titleMatch && favoriteMatch;\n      }),\n    [sortedTodos, searchTerm, selectedUsers, favoriteTodos, showFavorites]\n  );\n\n  return {\n    userOptions,\n    searchTerm,\n    selectedUsers,\n    setSearchTerm,\n    setSelectedUsers,\n    setShowFavorites,\n    filteredTodos,\n  };\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,QAAQ,QAAQ,yBAAyB;AAElD,OAAO,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM;IAAES,aAAa;IAAEC,aAAa;IAAEC;EAAiB,CAAC,GAAGV,gBAAgB,CAAC,CAAC;EAC7E,MAAM;IAAEW;EAAM,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAE5B,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAElDF,SAAS,CAAC,MAAM;IACd,MAAMiB,MAAM,GAAGH,KAAK,CAACI,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC1C,IAAID,CAAC,CAACE,SAAS,IAAI,CAACD,CAAC,CAACC,SAAS,EAAE;QAC/B,OAAO,CAAC,CAAC,CAAC;MACZ,CAAC,MAAM,IAAI,CAACF,CAAC,CAACE,SAAS,IAAID,CAAC,CAACC,SAAS,EAAE;QACtC,OAAO,CAAC,CAAC,CAAC,CAAC;MACb,CAAC,MAAM;QACL,OAAO,CAAC,CAAC,CAAC;MACZ;IACF,CAAC,CAAC;;IACFN,cAAc,CAACC,MAAM,CAAC;EACxB,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,MAAMS,aAAa,GAAGtB,OAAO,CAC3B,MACEc,WAAW,CAACS,MAAM,CAAEC,IAAI,IAAK;IAC3B,MAAMC,UAAU,GAAGD,IAAI,CAACE,KAAK,CAC1BC,WAAW,CAAC,CAAC,CACbC,QAAQ,CAACtB,UAAU,CAACqB,WAAW,CAAC,CAAC,CAAC;IAErC,MAAME,aAAa,GAAGlB,aAAa,GAC/BD,aAAa,CAACkB,QAAQ,CAACJ,IAAI,CAACM,EAAE,CAAC,GAC/B,IAAI;IACR,OAAOL,UAAU,IAAII,aAAa;EACpC,CAAC,CAAC,EACJ,CAACf,WAAW,EAAER,UAAU,EAAEE,aAAa,EAAEE,aAAa,EAAEC,aAAa,CACvE,CAAC;EAED,OAAO;IACLoB,WAAW;IACXzB,UAAU;IACVE,aAAa;IACbD,aAAa;IACbE,gBAAgB;IAChBG,gBAAgB;IAChBU;EACF,CAAC;AACH;AAACjB,EAAA,CA7CeD,cAAc;EAAA,QAG+BF,gBAAgB,EACzDC,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}