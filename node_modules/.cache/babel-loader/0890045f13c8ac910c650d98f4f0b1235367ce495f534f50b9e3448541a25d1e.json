{"ast":null,"code":"var _s = $RefreshSig$();\nimport { usePosts } from \"../context/postsContext\";\nimport { useFavorite } from \"../context/favoritiesPostsContext\";\nimport { useState } from \"react\";\nexport function useFilterPosts() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const {\n    favoritePosts,\n    showFavorites,\n    setShowFavorites\n  } = useFavorite();\n  const {\n    posts\n  } = usePosts();\n  const uniqueUsers = Array.from(new Set(posts.map(post => post.user ? post.user.id : \"Anonymous\"))).map(id => {\n    const post = posts.find(post => post.user && post.user.id === id);\n    return post ? post.user : {\n      name: \"Anonymous\",\n      id: \"Anonymous\"\n    };\n  });\n  const userOptions = uniqueUsers.map(user => ({\n    label: user.name,\n    value: user.id\n  }));\n  const filteredPosts = posts.filter(post => {\n    const titleMatch = (post.title || \"\").toLowerCase().includes(searchTerm.toLowerCase());\n    const userMatch = selectedUsers.length === 0 || selectedUsers.find(user => user.value === post.userId);\n    const favoriteMatch = showFavorites ? favoritePosts.includes(post.id) : true;\n    return titleMatch && userMatch && favoriteMatch;\n  });\n  return {\n    userOptions,\n    searchTerm,\n    selectedUsers,\n    setSearchTerm,\n    setSelectedUsers,\n    setShowFavorites,\n    filteredPosts,\n    filterPosts\n  };\n}\n_s(useFilterPosts, \"0Y+L0KtAMp2yZIUBVVqhWd1OzCI=\", false, function () {\n  return [useFavorite, usePosts];\n});","map":{"version":3,"names":["usePosts","useFavorite","useState","useFilterPosts","_s","searchTerm","setSearchTerm","selectedUsers","setSelectedUsers","favoritePosts","showFavorites","setShowFavorites","posts","uniqueUsers","Array","from","Set","map","post","user","id","find","name","userOptions","label","value","filteredPosts","filter","titleMatch","title","toLowerCase","includes","userMatch","length","userId","favoriteMatch","filterPosts"],"sources":["/Users/elvin/Documents/practica/test/src/utilities/hooks/useFilterPosts.js"],"sourcesContent":["import { usePosts } from \"../context/postsContext\";\nimport { useFavorite } from \"../context/favoritiesPostsContext\";\nimport { useState } from \"react\";\n\nexport function useFilterPosts() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const { favoritePosts, showFavorites, setShowFavorites } = useFavorite();\n  const { posts } = usePosts();\n\n  const uniqueUsers = Array.from(\n    new Set(posts.map((post) => (post.user ? post.user.id : \"Anonymous\")))\n  ).map((id) => {\n    const post = posts.find((post) => post.user && post.user.id === id);\n    return post ? post.user : { name: \"Anonymous\", id: \"Anonymous\" };\n  });\n\n  const userOptions = uniqueUsers.map((user) => ({\n    label: user.name,\n    value: user.id,\n  }));\n\n  const filteredPosts = posts.filter((post) => {\n    const titleMatch = (post.title || \"\")\n      .toLowerCase()\n      .includes(searchTerm.toLowerCase());\n\n    const userMatch =\n      selectedUsers.length === 0 ||\n      selectedUsers.find((user) => user.value === post.userId);\n\n    const favoriteMatch = showFavorites\n      ? favoritePosts.includes(post.id)\n      : true;\n    return titleMatch && userMatch && favoriteMatch;\n  });\n\n  return {\n    userOptions,\n    searchTerm,\n    selectedUsers,\n    setSearchTerm,\n    setSelectedUsers,\n    setShowFavorites,\n    filteredPosts,\n    filterPosts,\n  };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,WAAW,QAAQ,mCAAmC;AAC/D,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAO,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACK,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM;IAAEO,aAAa;IAAEC,aAAa;IAAEC;EAAiB,CAAC,GAAGV,WAAW,CAAC,CAAC;EACxE,MAAM;IAAEW;EAAM,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EAE5B,MAAMa,WAAW,GAAGC,KAAK,CAACC,IAAI,CAC5B,IAAIC,GAAG,CAACJ,KAAK,CAACK,GAAG,CAAEC,IAAI,IAAMA,IAAI,CAACC,IAAI,GAAGD,IAAI,CAACC,IAAI,CAACC,EAAE,GAAG,WAAY,CAAC,CACvE,CAAC,CAACH,GAAG,CAAEG,EAAE,IAAK;IACZ,MAAMF,IAAI,GAAGN,KAAK,CAACS,IAAI,CAAEH,IAAI,IAAKA,IAAI,CAACC,IAAI,IAAID,IAAI,CAACC,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;IACnE,OAAOF,IAAI,GAAGA,IAAI,CAACC,IAAI,GAAG;MAAEG,IAAI,EAAE,WAAW;MAAEF,EAAE,EAAE;IAAY,CAAC;EAClE,CAAC,CAAC;EAEF,MAAMG,WAAW,GAAGV,WAAW,CAACI,GAAG,CAAEE,IAAI,KAAM;IAC7CK,KAAK,EAAEL,IAAI,CAACG,IAAI;IAChBG,KAAK,EAAEN,IAAI,CAACC;EACd,CAAC,CAAC,CAAC;EAEH,MAAMM,aAAa,GAAGd,KAAK,CAACe,MAAM,CAAET,IAAI,IAAK;IAC3C,MAAMU,UAAU,GAAG,CAACV,IAAI,CAACW,KAAK,IAAI,EAAE,EACjCC,WAAW,CAAC,CAAC,CACbC,QAAQ,CAAC1B,UAAU,CAACyB,WAAW,CAAC,CAAC,CAAC;IAErC,MAAME,SAAS,GACbzB,aAAa,CAAC0B,MAAM,KAAK,CAAC,IAC1B1B,aAAa,CAACc,IAAI,CAAEF,IAAI,IAAKA,IAAI,CAACM,KAAK,KAAKP,IAAI,CAACgB,MAAM,CAAC;IAE1D,MAAMC,aAAa,GAAGzB,aAAa,GAC/BD,aAAa,CAACsB,QAAQ,CAACb,IAAI,CAACE,EAAE,CAAC,GAC/B,IAAI;IACR,OAAOQ,UAAU,IAAII,SAAS,IAAIG,aAAa;EACjD,CAAC,CAAC;EAEF,OAAO;IACLZ,WAAW;IACXlB,UAAU;IACVE,aAAa;IACbD,aAAa;IACbE,gBAAgB;IAChBG,gBAAgB;IAChBe,aAAa;IACbU;EACF,CAAC;AACH;AAAChC,EAAA,CA3CeD,cAAc;EAAA,QAG+BF,WAAW,EACpDD,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}