{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo, useState } from \"react\";\nimport { useFavoriteTodos } from \"../context/favoritiesTodosContext\";\nimport { useTodos } from \"../context/todosContext\";\nexport function useFilterTodos() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const {\n    favoriteTodos,\n    showFavorites,\n    setShowFavorites\n  } = useFavoriteTodos();\n  const {\n    todos\n  } = useTodos();\n  const uniqueUsers = useMemo(() => {\n    const userIds = new Set(todos.map(todo => todo.userId));\n    return todos.filter(todo => userIds.has(todo.userId)).map(todo => todo.user);\n  }, [todos]);\n  const userOptions = useMemo(() => uniqueUsers.map(user => ({\n    label: user.name,\n    value: user.id\n  })), [uniqueUsers]);\n  const sortedTodos = useMemo(() => {\n    const completedTodos = todos.filter(todo => todo.completed);\n    const uncompletedTodos = todos.filter(todo => !todo.completed);\n    return [...uncompletedTodos, ...completedTodos];\n  }, [todos]);\n  const filteredTodos = useMemo(() => sortedTodos.filter(todo => {\n    const titleMatch = todo.title.toLowerCase().includes(searchTerm.toLowerCase());\n    const userMatch = selectedUsers.length === 0 || selectedUsers.find(user => user.value === todo.userId);\n    const favoriteMatch = showFavorites ? favoriteTodos.includes(todo.id) : true;\n    return titleMatch && userMatch && favoriteMatch;\n  }), [sortedTodos, searchTerm, selectedUsers, favoriteTodos, showFavorites]);\n  return {\n    userOptions,\n    searchTerm,\n    selectedUsers,\n    setSearchTerm,\n    setSelectedUsers,\n    setShowFavorites,\n    filteredTodos\n  };\n}\n_s(useFilterTodos, \"bUKSQJT5h7y0NT56Yd4dacPHrxw=\", false, function () {\n  return [useFavoriteTodos, useTodos];\n});","map":{"version":3,"names":["useMemo","useState","useFavoriteTodos","useTodos","useFilterTodos","_s","searchTerm","setSearchTerm","selectedUsers","setSelectedUsers","favoriteTodos","showFavorites","setShowFavorites","todos","uniqueUsers","userIds","Set","map","todo","userId","filter","has","user","userOptions","label","name","value","id","sortedTodos","completedTodos","completed","uncompletedTodos","filteredTodos","titleMatch","title","toLowerCase","includes","userMatch","length","find","favoriteMatch"],"sources":["/Users/elvin/Documents/practica/test/src/utilities/hooks/useFilterTodos.js"],"sourcesContent":["import { useMemo, useState } from \"react\";\nimport { useFavoriteTodos } from \"../context/favoritiesTodosContext\";\nimport { useTodos } from \"../context/todosContext\";\n\nexport function useFilterTodos() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const { favoriteTodos, showFavorites, setShowFavorites } = useFavoriteTodos();\n  const { todos } = useTodos();\n\n  const uniqueUsers = useMemo(() => {\n    const userIds = new Set(todos.map((todo) => todo.userId));\n    return todos\n      .filter((todo) => userIds.has(todo.userId))\n      .map((todo) => todo.user);\n  }, [todos]);\n\n  const userOptions = useMemo(\n    () =>\n      uniqueUsers.map((user) => ({\n        label: user.name,\n        value: user.id,\n      })),\n    [uniqueUsers]\n  );\n\n  const sortedTodos = useMemo(() => {\n    const completedTodos = todos.filter((todo) => todo.completed);\n    const uncompletedTodos = todos.filter((todo) => !todo.completed);\n    return [...uncompletedTodos, ...completedTodos];\n  }, [todos]);\n\n  const filteredTodos = useMemo(\n    () =>\n      sortedTodos.filter((todo) => {\n        const titleMatch = todo.title\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase());\n        const userMatch =\n          selectedUsers.length === 0 ||\n          selectedUsers.find((user) => user.value === todo.userId);\n        const favoriteMatch = showFavorites\n          ? favoriteTodos.includes(todo.id)\n          : true;\n        return titleMatch && userMatch && favoriteMatch;\n      }),\n    [sortedTodos, searchTerm, selectedUsers, favoriteTodos, showFavorites]\n  );\n\n  return {\n    userOptions,\n    searchTerm,\n    selectedUsers,\n    setSearchTerm,\n    setSelectedUsers,\n    setShowFavorites,\n    filteredTodos,\n  };\n}\n"],"mappings":";AAAA,SAASA,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACzC,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,QAAQ,QAAQ,yBAAyB;AAElD,OAAO,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM;IAAES,aAAa;IAAEC,aAAa;IAAEC;EAAiB,CAAC,GAAGV,gBAAgB,CAAC,CAAC;EAC7E,MAAM;IAAEW;EAAM,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAE5B,MAAMW,WAAW,GAAGd,OAAO,CAAC,MAAM;IAChC,MAAMe,OAAO,GAAG,IAAIC,GAAG,CAACH,KAAK,CAACI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,MAAM,CAAC,CAAC;IACzD,OAAON,KAAK,CACTO,MAAM,CAAEF,IAAI,IAAKH,OAAO,CAACM,GAAG,CAACH,IAAI,CAACC,MAAM,CAAC,CAAC,CAC1CF,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACI,IAAI,CAAC;EAC7B,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EAEX,MAAMU,WAAW,GAAGvB,OAAO,CACzB,MACEc,WAAW,CAACG,GAAG,CAAEK,IAAI,KAAM;IACzBE,KAAK,EAAEF,IAAI,CAACG,IAAI;IAChBC,KAAK,EAAEJ,IAAI,CAACK;EACd,CAAC,CAAC,CAAC,EACL,CAACb,WAAW,CACd,CAAC;EAED,MAAMc,WAAW,GAAG5B,OAAO,CAAC,MAAM;IAChC,MAAM6B,cAAc,GAAGhB,KAAK,CAACO,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACY,SAAS,CAAC;IAC7D,MAAMC,gBAAgB,GAAGlB,KAAK,CAACO,MAAM,CAAEF,IAAI,IAAK,CAACA,IAAI,CAACY,SAAS,CAAC;IAChE,OAAO,CAAC,GAAGC,gBAAgB,EAAE,GAAGF,cAAc,CAAC;EACjD,CAAC,EAAE,CAAChB,KAAK,CAAC,CAAC;EAEX,MAAMmB,aAAa,GAAGhC,OAAO,CAC3B,MACE4B,WAAW,CAACR,MAAM,CAAEF,IAAI,IAAK;IAC3B,MAAMe,UAAU,GAAGf,IAAI,CAACgB,KAAK,CAC1BC,WAAW,CAAC,CAAC,CACbC,QAAQ,CAAC9B,UAAU,CAAC6B,WAAW,CAAC,CAAC,CAAC;IACrC,MAAME,SAAS,GACb7B,aAAa,CAAC8B,MAAM,KAAK,CAAC,IAC1B9B,aAAa,CAAC+B,IAAI,CAAEjB,IAAI,IAAKA,IAAI,CAACI,KAAK,KAAKR,IAAI,CAACC,MAAM,CAAC;IAC1D,MAAMqB,aAAa,GAAG7B,aAAa,GAC/BD,aAAa,CAAC0B,QAAQ,CAAClB,IAAI,CAACS,EAAE,CAAC,GAC/B,IAAI;IACR,OAAOM,UAAU,IAAII,SAAS,IAAIG,aAAa;EACjD,CAAC,CAAC,EACJ,CAACZ,WAAW,EAAEtB,UAAU,EAAEE,aAAa,EAAEE,aAAa,EAAEC,aAAa,CACvE,CAAC;EAED,OAAO;IACLY,WAAW;IACXjB,UAAU;IACVE,aAAa;IACbD,aAAa;IACbE,gBAAgB;IAChBG,gBAAgB;IAChBoB;EACF,CAAC;AACH;AAAC3B,EAAA,CAtDeD,cAAc;EAAA,QAG+BF,gBAAgB,EACzDC,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}