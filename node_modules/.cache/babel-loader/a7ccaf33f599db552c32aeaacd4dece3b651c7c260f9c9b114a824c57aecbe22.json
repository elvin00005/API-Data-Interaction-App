{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { ALBUMS_API, PHOTOS_API, USER_API } from \"../const/const\";\nimport _ from \"lodash\";\nexport function useGetsPhoto() {\n  _s();\n  const [albums, setAlbums] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const getAlbumsLists = async () => {\n    return await Promise.all([axios.get(ALBUMS_API), axios.get(PHOTOS_API), axios.get(USER_API)]);\n  };\n  useEffect(() => {\n    setLoading(true);\n    getAlbumsLists().then(_ref => {\n      let [albums, photos, users] = _ref;\n      const userMap = _.keyBy(users.data, \"id\");\n      const photosMap = _.groupBy(photos.data, \"albumId\");\n      const albumsWithPhotos = albums.data.map(album => {\n        return {\n          ...album\n          // user: userMap[album.userId],\n          // photos: photosMap[album.id] || [],\n        };\n      });\n\n      setAlbums(albumsWithPhotos);\n    }).catch(err => setError(true)).finally(() => setLoading(false));\n  }, []);\n  return {\n    albums\n  };\n}\n_s(useGetsPhoto, \"/aUlT6o3Q2zAjfTMACuAw4DnHOY=\");","map":{"version":3,"names":["axios","useEffect","useState","ALBUMS_API","PHOTOS_API","USER_API","_","useGetsPhoto","_s","albums","setAlbums","loading","setLoading","error","setError","getAlbumsLists","Promise","all","get","then","_ref","photos","users","userMap","keyBy","data","photosMap","groupBy","albumsWithPhotos","map","album","catch","err","finally"],"sources":["/Users/elvin/Documents/practica/test/src/utilities/hooks/useGetsPhoto.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { ALBUMS_API, PHOTOS_API, USER_API } from \"../const/const\";\nimport _ from \"lodash\";\n\nexport function useGetsPhoto() {\n  const [albums, setAlbums] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const getAlbumsLists = async () => {\n    return await Promise.all([\n      axios.get(ALBUMS_API),\n      axios.get(PHOTOS_API),\n      axios.get(USER_API),\n    ]);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getAlbumsLists()\n      .then(([albums, photos, users]) => {\n        const userMap = _.keyBy(users.data, \"id\");\n\n        const photosMap = _.groupBy(photos.data, \"albumId\");\n        const albumsWithPhotos = albums.data.map((album) => {\n          return {\n            ...album,\n            // user: userMap[album.userId],\n            // photos: photosMap[album.id] || [],\n          };\n        });\n        setAlbums(albumsWithPhotos);\n      })\n      .catch((err) => setError(true))\n      .finally(() => setLoading(false));\n  }, []);\n  return { albums };\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,UAAU,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,gBAAgB;AACjE,OAAOC,CAAC,MAAM,QAAQ;AAEtB,OAAO,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,OAAO,MAAMC,OAAO,CAACC,GAAG,CAAC,CACvBjB,KAAK,CAACkB,GAAG,CAACf,UAAU,CAAC,EACrBH,KAAK,CAACkB,GAAG,CAACd,UAAU,CAAC,EACrBJ,KAAK,CAACkB,GAAG,CAACb,QAAQ,CAAC,CACpB,CAAC;EACJ,CAAC;EAEDJ,SAAS,CAAC,MAAM;IACdW,UAAU,CAAC,IAAI,CAAC;IAChBG,cAAc,CAAC,CAAC,CACbI,IAAI,CAACC,IAAA,IAA6B;MAAA,IAA5B,CAACX,MAAM,EAAEY,MAAM,EAAEC,KAAK,CAAC,GAAAF,IAAA;MAC5B,MAAMG,OAAO,GAAGjB,CAAC,CAACkB,KAAK,CAACF,KAAK,CAACG,IAAI,EAAE,IAAI,CAAC;MAEzC,MAAMC,SAAS,GAAGpB,CAAC,CAACqB,OAAO,CAACN,MAAM,CAACI,IAAI,EAAE,SAAS,CAAC;MACnD,MAAMG,gBAAgB,GAAGnB,MAAM,CAACgB,IAAI,CAACI,GAAG,CAAEC,KAAK,IAAK;QAClD,OAAO;UACL,GAAGA;UACH;UACA;QACF,CAAC;MACH,CAAC,CAAC;;MACFpB,SAAS,CAACkB,gBAAgB,CAAC;IAC7B,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAKlB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAC9BmB,OAAO,CAAC,MAAMrB,UAAU,CAAC,KAAK,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EACN,OAAO;IAAEH;EAAO,CAAC;AACnB;AAACD,EAAA,CAjCeD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}