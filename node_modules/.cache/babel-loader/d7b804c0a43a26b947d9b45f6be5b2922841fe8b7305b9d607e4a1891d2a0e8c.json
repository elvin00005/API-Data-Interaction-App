{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport default function usePagination(_ref) {\n  _s();\n  let {\n    filteredPosts\n  } = _ref;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(localStorage.getItem(\"quantityPosts\") || 10);\n  const [currentPosts, setCurrentPosts] = useState([]);\n  useEffect(() => {\n    const lastIndexPost = currentPage * postsPerPage;\n    const firstIndexPost = lastIndexPost - postsPerPage;\n    setCurrentPosts(filteredPosts.slice(firstIndexPost, lastIndexPost));\n  }, [currentPage, postsPerPage]);\n  const paginate = number => setCurrentPage(number);\n  const changePage = value => {\n    setPostsPerPage(value);\n    localStorage.setItem(\"quantityPosts\", value);\n  };\n  return {\n    postsPerPage,\n    setCurrentPage,\n    currentPage,\n    paginate,\n    changePage,\n    currentPosts\n  };\n}\n_s(usePagination, \"dcxOxNp9hD5CXrYBvJMF+kRLqQ0=\");","map":{"version":3,"names":["useEffect","useState","usePagination","_ref","_s","filteredPosts","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","localStorage","getItem","currentPosts","setCurrentPosts","lastIndexPost","firstIndexPost","slice","paginate","number","changePage","value","setItem"],"sources":["/Users/elvin/Documents/practica/test/src/utilities/hooks/usePagination.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport default function usePagination({ filteredPosts }) {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(\n    localStorage.getItem(\"quantityPosts\") || 10\n  );\n  const [currentPosts, setCurrentPosts] = useState([]);\n\n  useEffect(() => {\n    const lastIndexPost = currentPage * postsPerPage;\n    const firstIndexPost = lastIndexPost - postsPerPage;\n\n    setCurrentPosts(filteredPosts.slice(firstIndexPost, lastIndexPost));\n  }, [currentPage, postsPerPage]);\n\n  const paginate = (number) => setCurrentPage(number);\n  const changePage = (value) => {\n    setPostsPerPage(value);\n    localStorage.setItem(\"quantityPosts\", value);\n  };\n\n  return {\n    postsPerPage,\n    setCurrentPage,\n    currentPage,\n    paginate,\n    changePage,\n    currentPosts,\n  };\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAAoB;EAAAC,EAAA;EAAA,IAAnB;IAAEC;EAAc,CAAC,GAAAF,IAAA;EACrD,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAC9CS,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,IAAI,EAC3C,CAAC;EACD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,MAAMc,aAAa,GAAGR,WAAW,GAAGE,YAAY;IAChD,MAAMO,cAAc,GAAGD,aAAa,GAAGN,YAAY;IAEnDK,eAAe,CAACR,aAAa,CAACW,KAAK,CAACD,cAAc,EAAED,aAAa,CAAC,CAAC;EACrE,CAAC,EAAE,CAACR,WAAW,EAAEE,YAAY,CAAC,CAAC;EAE/B,MAAMS,QAAQ,GAAIC,MAAM,IAAKX,cAAc,CAACW,MAAM,CAAC;EACnD,MAAMC,UAAU,GAAIC,KAAK,IAAK;IAC5BX,eAAe,CAACW,KAAK,CAAC;IACtBV,YAAY,CAACW,OAAO,CAAC,eAAe,EAAED,KAAK,CAAC;EAC9C,CAAC;EAED,OAAO;IACLZ,YAAY;IACZD,cAAc;IACdD,WAAW;IACXW,QAAQ;IACRE,UAAU;IACVP;EACF,CAAC;AACH;AAACR,EAAA,CA5BuBF,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}