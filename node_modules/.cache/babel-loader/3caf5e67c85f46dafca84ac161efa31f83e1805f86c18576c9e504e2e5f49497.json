{"ast":null,"code":"var _jsxFileName = \"/Users/elvin/Documents/practica/test/src/components/postComponents/PostCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Card, Form } from \"react-bootstrap\";\nimport { ButtonToAddToFavorites, CommentButton, DeleteButton, EditButton } from \"../../utilities/const/Buttons\";\nimport FormForUpdatePost from \"../formForUpdatePost/FormForUpdatePost\";\nimport useSaveForm from \"../../utilities/hooks/useSaveForm\";\nimport styles from \"../../pages/Posts.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostCard = _ref => {\n  _s();\n  let {\n    post,\n    favoritePosts,\n    selectedComments,\n    selectedPostForComments,\n    handleFavorite,\n    handleComment,\n    setIsVisabilityModal\n  } = _ref;\n  const [editingPost, setEditingPost] = useState(null);\n  const [editedPost, setEditedPost] = useState({\n    title: post.title,\n    body: \"\",\n    userName: \"\"\n  });\n  const {\n    saveData\n  } = useSaveForm({\n    setEditedPost,\n    editingPost,\n    setEditingPost,\n    editedPost,\n    posts: [],\n    setPosts: () => null\n  });\n  const handleSave = async () => {\n    saveData();\n  };\n  const [isEdit, setIsEdit] = useState(false);\n  const handleCloseEdit = () => setIsEdit(false);\n  const handleEdit = post => {\n    setIsEdit(true);\n  };\n  if (isEdit) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column bg-light p-3 m-1 rounded\",\n      children: /*#__PURE__*/_jsxDEV(FormForUpdatePost, {\n        editedPost: editedPost,\n        setEditedPost: setEditedPost,\n        handleSave: handleSave,\n        handleCancel: handleCloseEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: `text-center m-1 p-2 ${favoritePosts.includes(post.id) ? \"bg-warning\" : \"bg-light\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n        className: styles.check,\n        checked: selectedPosts.includes(post.id),\n        onChange: e => {\n          if (e.target.checked) {\n            setSelectedPosts([...selectedPosts, post.id]);\n          } else {\n            setSelectedPosts(selectedPosts.filter(postId => postId !== post.id));\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: post.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center gap-5\",\n      children: [/*#__PURE__*/_jsxDEV(EditButton, {\n        onClick: handleEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonToAddToFavorites, {\n        onClick: () => handleFavorite(post.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n        onClick: () => {\n          handleButtonClick(post.id);\n          setIsVisabilityModal(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentButton, {\n        className: selectedPostForComments === post.id ? styles.commentButtonActive : \"\",\n        onClick: () => {\n          handleComment(post.id);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), selectedPostForComments === post.id && selectedComments.map(comments => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-1 p-2 bg-info rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: comments.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: comments.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comments.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this)]\n      }, comments.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(PostCard, \"wtTD4pi9624xlZq5d7o6YE+jgYM=\", false, function () {\n  return [useSaveForm];\n});\n_c = PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","useState","Card","Form","ButtonToAddToFavorites","CommentButton","DeleteButton","EditButton","FormForUpdatePost","useSaveForm","styles","jsxDEV","_jsxDEV","PostCard","_ref","_s","post","favoritePosts","selectedComments","selectedPostForComments","handleFavorite","handleComment","setIsVisabilityModal","editingPost","setEditingPost","editedPost","setEditedPost","title","body","userName","saveData","posts","setPosts","handleSave","isEdit","setIsEdit","handleCloseEdit","handleEdit","className","children","handleCancel","fileName","_jsxFileName","lineNumber","columnNumber","id","includes","Check","check","checked","selectedPosts","onChange","e","target","setSelectedPosts","filter","postId","onClick","handleButtonClick","commentButtonActive","map","comments","email","name","_c","$RefreshReg$"],"sources":["/Users/elvin/Documents/practica/test/src/components/postComponents/PostCard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Card, Form } from \"react-bootstrap\";\nimport {\n  ButtonToAddToFavorites,\n  CommentButton,\n  DeleteButton,\n  EditButton,\n} from \"../../utilities/const/Buttons\";\nimport FormForUpdatePost from \"../formForUpdatePost/FormForUpdatePost\";\nimport useSaveForm from \"../../utilities/hooks/useSaveForm\";\n\nimport styles from \"../../pages/Posts.module.scss\";\n\nexport const PostCard = ({\n  post,\n  favoritePosts,\n  selectedComments,\n  selectedPostForComments,\n  handleFavorite,\n  handleComment,\n  setIsVisabilityModal,\n}) => {\n  const [editingPost, setEditingPost] = useState(null);\n  const [editedPost, setEditedPost] = useState({\n    title: post.title,\n    body: \"\",\n    userName: \"\",\n  });\n  const { saveData } = useSaveForm({\n    setEditedPost,\n    editingPost,\n    setEditingPost,\n    editedPost,\n    posts: [],\n    setPosts: () => null,\n  });\n\n  const handleSave = async () => {\n    saveData();\n  };\n\n  const [isEdit, setIsEdit] = useState(false);\n  const handleCloseEdit = () => setIsEdit(false);\n\n  const handleEdit = (post) => {\n    setIsEdit(true);\n  };\n  if (isEdit) {\n    return (\n      <div\n        key={post.id}\n        className=\"d-flex flex-column bg-light p-3 m-1 rounded\"\n      >\n        <FormForUpdatePost\n          editedPost={editedPost}\n          setEditedPost={setEditedPost}\n          handleSave={handleSave}\n          handleCancel={handleCloseEdit}\n        />\n      </div>\n    );\n  }\n  return (\n    <Card\n      className={`text-center m-1 p-2 ${\n        favoritePosts.includes(post.id) ? \"bg-warning\" : \"bg-light\"\n      }`}\n    >\n      <div>\n        <Form.Check\n          className={styles.check}\n          checked={selectedPosts.includes(post.id)}\n          onChange={(e) => {\n            if (e.target.checked) {\n              setSelectedPosts([...selectedPosts, post.id]);\n            } else {\n              setSelectedPosts(\n                selectedPosts.filter((postId) => postId !== post.id)\n              );\n            }\n          }}\n        />\n\n        <h3>{post.title}</h3>\n        <h5>{post.userName}</h5>\n        <p>{post.body}</p>\n      </div>\n\n      <div className=\"d-flex justify-content-center gap-5\">\n        <EditButton onClick={handleEdit} />\n        <ButtonToAddToFavorites onClick={() => handleFavorite(post.id)} />\n        <DeleteButton\n          onClick={() => {\n            handleButtonClick(post.id);\n            setIsVisabilityModal(true);\n          }}\n        />\n        <CommentButton\n          className={\n            selectedPostForComments === post.id\n              ? styles.commentButtonActive\n              : \"\"\n          }\n          onClick={() => {\n            handleComment(post.id);\n          }}\n        />\n      </div>\n      {selectedPostForComments === post.id &&\n        selectedComments.map((comments) => {\n          return (\n            <div\n              key={comments.id}\n              className=\"m-1 p-2 bg-info\n            rounded\"\n            >\n              <h4>{comments.email}</h4>\n              <h5>{comments.name}</h5>\n              <p>{comments.body}</p>\n            </div>\n          );\n        })}\n    </Card>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}